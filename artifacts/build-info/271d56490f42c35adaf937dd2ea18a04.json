{
	"id": "271d56490f42c35adaf937dd2ea18a04",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"BEP20Token.sol": {
				"content": "pragma solidity 0.5.16;\r\n\r\nimport \"./Context.sol\";\r\nimport \"./IBEP20.sol\";\r\nimport \"./Ownable.sol\";\r\nimport \"./SafeMath.sol\";\r\n\r\ncontract BEP20Token is Context, IBEP20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 private _decimals;\r\n  string private _symbol;\r\n  string private _name;\r\n\r\n  constructor() public {\r\n    //名称\r\n    _name = \"TangPing\";\r\n    //符号\r\n    _symbol = \"TPING\";\r\n    //精度\r\n    _decimals = 6;\r\n    //总供应量\r\n    _totalSupply = 10000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-balanceOf}.//余额\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transfer}.//转移\r\n   *\r\n   * Requirements:\r\n   * \r\n   * - `recipient` cannot be the zero address. “收件人”不能是零地址。\r\n   * - the caller must have a balance of at least `amount`.发送人至少要有什么多钱\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  //解释下下两个方法\r\n  //假设我们有用户A和用户B。A有 1000 个代币，想授权B使用其中的 100 个。\r\n  //一个会打电话approve(address(B), 100, {\"from\": address(A)})\r\n  //B将检查A允许他使用多少令牌，方法是调用：allowance(address(A), address(B))\r\n  //B将通过调用以下方式将这些令牌发送到他的帐户： transferFrom(address(A), address(B), 100, {\"from\": address(B)})\r\n\r\n  /**\r\n   * @dev See {BEP20-allowance}. //批准spender从owner地址转移代币\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-approve}.//批准某地址某数量\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n      //来自_msgSender\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {BEP20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {BEP20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {BEP20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing //持有者增发\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address. //发送人\r\n   * - `recipient` cannot be the zero address. //接收者\r\n   * - `sender` must have a balance of at least `amount`. //转移金额\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\r\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\r\n    _balances[recipient] = _balances[recipient].add(amount);\r\n    //记录日志\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.//给account地址增发\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.//销毁account地址的代币\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"BEP20: burn from the zero address\");\r\n\r\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\r\n    _totalSupply = _totalSupply.sub(amount);\r\n    emit Transfer(account, address(0), amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.//批准\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"BEP20: approve from the zero address\");\r\n    require(spender != address(0), \"BEP20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted 开发者从发来的地址中销毁指定数量的代币\r\n   * from the caller's allowance.\r\n   * \r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			},
			"SafeMath.sol": {
				"content": "pragma solidity 0.5.16;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n    \r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}"
			},
			"Ownable.sol": {
				"content": "pragma solidity 0.5.16;\r\n\r\nimport \"./Context.sol\";\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}"
			},
			"IBEP20.sol": {
				"content": "pragma solidity 0.5.16;\r\n\r\ninterface IBEP20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			},
			"Context.sol": {
				"content": "pragma solidity 0.5.16;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"BEP20Token.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}. //批准spender从owner地址转移代币"
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.//批准某地址某数量    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}.//余额"
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing //持有者增发 the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.//转移    * Requirements: \r - `recipient` cannot be the zero address. “收件人”不能是零地址。 - the caller must have a balance of at least `amount`.发送人至少要有什么多钱"
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"BEP20Token.sol\":129:8817  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"BEP20Token.sol\":459:759  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"BEP20Token.sol\":459:759  constructor() public {\r... */\n  pop\n    /* \"Ownable.sol\":835:852  address msgSender */\n  0x00\n    /* \"Ownable.sol\":855:867  _msgSender() */\n  tag_7\n    /* \"Ownable.sol\":855:865  _msgSender */\n  shl(0x20, tag_8)\n    /* \"Ownable.sol\":855:867  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Ownable.sol\":835:867  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"Ownable.sol\":883:892  msgSender */\n  dup1\n    /* \"Ownable.sol\":874:880  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":874:892  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":937:946  msgSender */\n  dup1\n    /* \"Ownable.sol\":904:947  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Ownable.sol\":933:934  0 */\n  0x00\n    /* \"Ownable.sol\":904:947  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Ownable.sol\":804:953  constructor () internal {\r... */\n  pop\n    /* \"BEP20Token.sol\":501:519  _name = \"TangPing\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x54616e6750696e67000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"BEP20Token.sol\":501:506  _name */\n  0x06\n    /* \"BEP20Token.sol\":501:519  _name = \"TangPing\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_10\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"BEP20Token.sol\":540:557  _symbol = \"TPING\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x5450494e47000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"BEP20Token.sol\":540:547  _symbol */\n  0x05\n    /* \"BEP20Token.sol\":540:557  _symbol = \"TPING\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"BEP20Token.sol\":590:591  6 */\n  0x06\n    /* \"BEP20Token.sol\":578:587  _decimals */\n  0x04\n  0x00\n    /* \"BEP20Token.sol\":578:591  _decimals = 6 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BEP20Token.sol\":633:650  10000000000000000 */\n  0x2386f26fc10000\n    /* \"BEP20Token.sol\":618:630  _totalSupply */\n  0x03\n    /* \"BEP20Token.sol\":618:650  _totalSupply = 10000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BEP20Token.sol\":681:693  _totalSupply */\n  sload(0x03)\n    /* \"BEP20Token.sol\":657:666  _balances */\n  0x01\n    /* \"BEP20Token.sol\":657:678  _balances[msg.sender] */\n  0x00\n    /* \"BEP20Token.sol\":667:677  msg.sender */\n  caller\n    /* \"BEP20Token.sol\":657:678  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BEP20Token.sol\":657:693  _balances[msg.sender] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BEP20Token.sol\":728:738  msg.sender */\n  caller\n    /* \"BEP20Token.sol\":707:753  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BEP20Token.sol\":724:725  0 */\n  0x00\n    /* \"BEP20Token.sol\":707:753  Transfer(address(0), msg.sender, _totalSupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"BEP20Token.sol\":740:752  _totalSupply */\n  sload(0x03)\n    /* \"BEP20Token.sol\":707:753  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BEP20Token.sol\":129:8817  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n  jump(tag_13)\n    /* \"Context.sol\":744:836  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"Context.sol\":789:804  address payable */\n  0x00\n    /* \"Context.sol\":820:830  msg.sender */\n  caller\n    /* \"Context.sol\":813:830  return msg.sender */\n  swap1\n  pop\n    /* \"Context.sol\":744:836  function _msgSender() internal view returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"BEP20Token.sol\":129:8817  contract BEP20Token is Context, IBEP20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BEP20Token.sol\":129:8817  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"BEP20Token.sol\":129:8817  contract BEP20Token is Context, IBEP20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BEP20Token.sol\":1229:1308  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"BEP20Token.sol\":1229:1308  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":2860:3030  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"BEP20Token.sol\":2860:3030  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":1364:1451  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":3475:3767  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"BEP20Token.sol\":3475:3767  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":957:1036  function decimals() external view returns (uint8) {\r... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":4149:4349  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"BEP20Token.sol\":4149:4349  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":1513:1619  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"BEP20Token.sol\":1513:1619  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1628:1758  function renounceOwnership() public onlyOwner {\r... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"BEP20Token.sol\":819:898  function getOwner() external view returns (address) {\r... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1026:1099  function owner() public view returns (address) {\r... */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":1093:1176  function symbol() external view returns (string memory) {\r... */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_52:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_52)\n    tag_54:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"BEP20Token.sol\":1093:1176  function symbol() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_55\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_55:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":5290:5410  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"BEP20Token.sol\":5290:5410  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":4821:5072  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n        /* \"BEP20Token.sol\":4821:5072  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":1892:2042  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_16:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"BEP20Token.sol\":1892:2042  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BEP20Token.sol\":2574:2704  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_17:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"BEP20Token.sol\":2574:2704  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":1903:2006  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_18:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"Ownable.sol\":1903:2006  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"BEP20Token.sol\":1229:1308  function name() external view returns (string memory) {\r... */\n    tag_23:\n        /* \"BEP20Token.sol\":1268:1281  string memory */\n      0x60\n        /* \"BEP20Token.sol\":1297:1302  _name */\n      0x06\n        /* \"BEP20Token.sol\":1290:1302  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"BEP20Token.sol\":1229:1308  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP20Token.sol\":2860:3030  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_30:\n        /* \"BEP20Token.sol\":2928:2932  bool */\n      0x00\n        /* \"BEP20Token.sol\":2967:3006  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"BEP20Token.sol\":2976:2988  _msgSender() */\n      tag_77\n        /* \"BEP20Token.sol\":2976:2986  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":2976:2988  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"BEP20Token.sol\":2990:2997  spender */\n      dup5\n        /* \"BEP20Token.sol\":2999:3005  amount */\n      dup5\n        /* \"BEP20Token.sol\":2967:2975  _approve */\n      tag_79\n        /* \"BEP20Token.sol\":2967:3006  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n        /* \"BEP20Token.sol\":3020:3024  true */\n      0x01\n        /* \"BEP20Token.sol\":3013:3024  return true */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":2860:3030  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20Token.sol\":1364:1451  function totalSupply() external view returns (uint256) {\r... */\n    tag_32:\n        /* \"BEP20Token.sol\":1410:1417  uint256 */\n      0x00\n        /* \"BEP20Token.sol\":1433:1445  _totalSupply */\n      sload(0x03)\n        /* \"BEP20Token.sol\":1426:1445  return _totalSupply */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":1364:1451  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP20Token.sol\":3475:3767  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_35:\n        /* \"BEP20Token.sol\":3566:3570  bool */\n      0x00\n        /* \"BEP20Token.sol\":3579:3615  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"BEP20Token.sol\":3589:3595  sender */\n      dup5\n        /* \"BEP20Token.sol\":3597:3606  recipient */\n      dup5\n        /* \"BEP20Token.sol\":3608:3614  amount */\n      dup5\n        /* \"BEP20Token.sol\":3579:3588  _transfer */\n      tag_83\n        /* \"BEP20Token.sol\":3579:3615  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"BEP20Token.sol\":3622:3743  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"BEP20Token.sol\":3631:3637  sender */\n      dup5\n        /* \"BEP20Token.sol\":3639:3651  _msgSender() */\n      tag_85\n        /* \"BEP20Token.sol\":3639:3649  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":3639:3651  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"BEP20Token.sol\":3653:3742  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"BEP20Token.sol\":3691:3697  amount */\n      dup6\n        /* \"BEP20Token.sol\":3653:3742  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n        /* \"BEP20Token.sol\":3653:3664  _allowances */\n      0x02\n        /* \"BEP20Token.sol\":3653:3672  _allowances[sender] */\n      0x00\n        /* \"BEP20Token.sol\":3665:3671  sender */\n      dup12\n        /* \"BEP20Token.sol\":3653:3672  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":3653:3686  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"BEP20Token.sol\":3673:3685  _msgSender() */\n      tag_87\n        /* \"BEP20Token.sol\":3673:3683  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":3673:3685  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"BEP20Token.sol\":3653:3686  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20Token.sol\":3653:3690  _allowances[sender][_msgSender()].sub */\n      tag_88\n      swap1\n        /* \"BEP20Token.sol\":3653:3742  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"BEP20Token.sol\":3622:3630  _approve */\n      tag_79\n        /* \"BEP20Token.sol\":3622:3743  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n        /* \"BEP20Token.sol\":3757:3761  true */\n      0x01\n        /* \"BEP20Token.sol\":3750:3761  return true */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":3475:3767  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20Token.sol\":957:1036  function decimals() external view returns (uint8) {\r... */\n    tag_37:\n        /* \"BEP20Token.sol\":1000:1005  uint8 */\n      0x00\n        /* \"BEP20Token.sol\":1021:1030  _decimals */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BEP20Token.sol\":1014:1030  return _decimals */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":957:1036  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP20Token.sol\":4149:4349  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_40:\n        /* \"BEP20Token.sol\":4229:4233  bool */\n      0x00\n        /* \"BEP20Token.sol\":4242:4325  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_91\n        /* \"BEP20Token.sol\":4251:4263  _msgSender() */\n      tag_92\n        /* \"BEP20Token.sol\":4251:4261  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":4251:4263  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"BEP20Token.sol\":4265:4272  spender */\n      dup5\n        /* \"BEP20Token.sol\":4274:4324  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_93\n        /* \"BEP20Token.sol\":4313:4323  addedValue */\n      dup6\n        /* \"BEP20Token.sol\":4274:4285  _allowances */\n      0x02\n        /* \"BEP20Token.sol\":4274:4299  _allowances[_msgSender()] */\n      0x00\n        /* \"BEP20Token.sol\":4286:4298  _msgSender() */\n      tag_94\n        /* \"BEP20Token.sol\":4286:4296  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":4286:4298  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"BEP20Token.sol\":4274:4299  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":4274:4308  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"BEP20Token.sol\":4300:4307  spender */\n      dup10\n        /* \"BEP20Token.sol\":4274:4308  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20Token.sol\":4274:4312  _allowances[_msgSender()][spender].add */\n      tag_95\n      swap1\n        /* \"BEP20Token.sol\":4274:4324  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"BEP20Token.sol\":4242:4250  _approve */\n      tag_79\n        /* \"BEP20Token.sol\":4242:4325  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_91:\n        /* \"BEP20Token.sol\":4339:4343  true */\n      0x01\n        /* \"BEP20Token.sol\":4332:4343  return true */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":4149:4349  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20Token.sol\":1513:1619  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_43:\n        /* \"BEP20Token.sol\":1572:1579  uint256 */\n      0x00\n        /* \"BEP20Token.sol\":1595:1604  _balances */\n      0x01\n        /* \"BEP20Token.sol\":1595:1613  _balances[account] */\n      0x00\n        /* \"BEP20Token.sol\":1605:1612  account */\n      dup4\n        /* \"BEP20Token.sol\":1595:1613  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20Token.sol\":1588:1613  return _balances[account] */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":1513:1619  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1628:1758  function renounceOwnership() public onlyOwner {\r... */\n    tag_45:\n        /* \"Ownable.sol\":1230:1242  _msgSender() */\n      tag_98\n        /* \"Ownable.sol\":1230:1240  _msgSender */\n      tag_78\n        /* \"Ownable.sol\":1230:1242  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"Ownable.sol\":1220:1242  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1220:1226  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1220:1242  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1212:1279  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"Ownable.sol\":1723:1724  0 */\n      0x00\n        /* \"Ownable.sol\":1686:1726  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1707:1713  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1686:1726  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ownable.sol\":1750:1751  0 */\n      0x00\n        /* \"Ownable.sol\":1733:1739  _owner */\n      dup1\n      0x00\n        /* \"Ownable.sol\":1733:1752  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ownable.sol\":1628:1758  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"BEP20Token.sol\":819:898  function getOwner() external view returns (address) {\r... */\n    tag_47:\n        /* \"BEP20Token.sol\":862:869  address */\n      0x00\n        /* \"BEP20Token.sol\":885:892  owner() */\n      tag_102\n        /* \"BEP20Token.sol\":885:890  owner */\n      tag_49\n        /* \"BEP20Token.sol\":885:892  owner() */\n      jump\t// in\n    tag_102:\n        /* \"BEP20Token.sol\":878:892  return owner() */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":819:898  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":1026:1099  function owner() public view returns (address) {\r... */\n    tag_49:\n        /* \"Ownable.sol\":1064:1071  address */\n      0x00\n        /* \"Ownable.sol\":1087:1093  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1080:1093  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":1026:1099  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP20Token.sol\":1093:1176  function symbol() external view returns (string memory) {\r... */\n    tag_51:\n        /* \"BEP20Token.sol\":1134:1147  string memory */\n      0x60\n        /* \"BEP20Token.sol\":1163:1170  _symbol */\n      0x05\n        /* \"BEP20Token.sol\":1156:1170  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"BEP20Token.sol\":1093:1176  function symbol() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP20Token.sol\":5290:5410  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_58:\n        /* \"BEP20Token.sol\":5346:5350  bool */\n      0x00\n        /* \"Ownable.sol\":1230:1242  _msgSender() */\n      tag_109\n        /* \"Ownable.sol\":1230:1240  _msgSender */\n      tag_78\n        /* \"Ownable.sol\":1230:1242  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"Ownable.sol\":1220:1242  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1220:1226  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1220:1242  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1212:1279  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"BEP20Token.sol\":5359:5386  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"BEP20Token.sol\":5365:5377  _msgSender() */\n      tag_113\n        /* \"BEP20Token.sol\":5365:5375  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":5365:5377  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"BEP20Token.sol\":5379:5385  amount */\n      dup4\n        /* \"BEP20Token.sol\":5359:5364  _mint */\n      tag_114\n        /* \"BEP20Token.sol\":5359:5386  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n        /* \"BEP20Token.sol\":5400:5404  true */\n      0x01\n        /* \"BEP20Token.sol\":5393:5404  return true */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":5290:5410  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BEP20Token.sol\":4821:5072  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_61:\n        /* \"BEP20Token.sol\":4906:4910  bool */\n      0x00\n        /* \"BEP20Token.sol\":4919:5048  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_116\n        /* \"BEP20Token.sol\":4928:4940  _msgSender() */\n      tag_117\n        /* \"BEP20Token.sol\":4928:4938  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":4928:4940  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"BEP20Token.sol\":4942:4949  spender */\n      dup5\n        /* \"BEP20Token.sol\":4951:5047  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_118\n        /* \"BEP20Token.sol\":4990:5005  subtractedValue */\n      dup6\n        /* \"BEP20Token.sol\":4951:5047  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"BEP20Token.sol\":4951:4962  _allowances */\n      0x02\n        /* \"BEP20Token.sol\":4951:4976  _allowances[_msgSender()] */\n      0x00\n        /* \"BEP20Token.sol\":4963:4975  _msgSender() */\n      tag_119\n        /* \"BEP20Token.sol\":4963:4973  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":4963:4975  _msgSender() */\n      jump\t// in\n    tag_119:\n        /* \"BEP20Token.sol\":4951:4976  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":4951:4985  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"BEP20Token.sol\":4977:4984  spender */\n      dup11\n        /* \"BEP20Token.sol\":4951:4985  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20Token.sol\":4951:4989  _allowances[_msgSender()][spender].sub */\n      tag_88\n      swap1\n        /* \"BEP20Token.sol\":4951:5047  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"BEP20Token.sol\":4919:4927  _approve */\n      tag_79\n        /* \"BEP20Token.sol\":4919:5048  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_116:\n        /* \"BEP20Token.sol\":5062:5066  true */\n      0x01\n        /* \"BEP20Token.sol\":5055:5066  return true */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":4821:5072  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20Token.sol\":1892:2042  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_64:\n        /* \"BEP20Token.sol\":1963:1967  bool */\n      0x00\n        /* \"BEP20Token.sol\":1976:2018  _transfer(_msgSender(), recipient, amount) */\n      tag_121\n        /* \"BEP20Token.sol\":1986:1998  _msgSender() */\n      tag_122\n        /* \"BEP20Token.sol\":1986:1996  _msgSender */\n      tag_78\n        /* \"BEP20Token.sol\":1986:1998  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"BEP20Token.sol\":2000:2009  recipient */\n      dup5\n        /* \"BEP20Token.sol\":2011:2017  amount */\n      dup5\n        /* \"BEP20Token.sol\":1976:1985  _transfer */\n      tag_83\n        /* \"BEP20Token.sol\":1976:2018  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_121:\n        /* \"BEP20Token.sol\":2032:2036  true */\n      0x01\n        /* \"BEP20Token.sol\":2025:2036  return true */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":1892:2042  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20Token.sol\":2574:2704  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_67:\n        /* \"BEP20Token.sol\":2648:2655  uint256 */\n      0x00\n        /* \"BEP20Token.sol\":2671:2682  _allowances */\n      0x02\n        /* \"BEP20Token.sol\":2671:2689  _allowances[owner] */\n      0x00\n        /* \"BEP20Token.sol\":2683:2688  owner */\n      dup5\n        /* \"BEP20Token.sol\":2671:2689  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":2671:2698  _allowances[owner][spender] */\n      0x00\n        /* \"BEP20Token.sol\":2690:2697  spender */\n      dup4\n        /* \"BEP20Token.sol\":2671:2698  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20Token.sol\":2664:2698  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"BEP20Token.sol\":2574:2704  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":1903:2006  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_70:\n        /* \"Ownable.sol\":1230:1242  _msgSender() */\n      tag_125\n        /* \"Ownable.sol\":1230:1240  _msgSender */\n      tag_78\n        /* \"Ownable.sol\":1230:1242  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"Ownable.sol\":1220:1242  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1220:1226  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":1220:1242  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":1212:1279  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"Ownable.sol\":1972:2000  _transferOwnership(newOwner) */\n      tag_128\n        /* \"Ownable.sol\":1991:1999  newOwner */\n      dup2\n        /* \"Ownable.sol\":1972:1990  _transferOwnership */\n      tag_129\n        /* \"Ownable.sol\":1972:2000  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"Ownable.sol\":1903:2006  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"Context.sol\":744:836  function _msgSender() internal view returns (address payable) {\r... */\n    tag_78:\n        /* \"Context.sol\":789:804  address payable */\n      0x00\n        /* \"Context.sol\":820:830  msg.sender */\n      caller\n        /* \"Context.sol\":813:830  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":744:836  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"BEP20Token.sol\":8041:8361  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_79:\n        /* \"BEP20Token.sol\":8148:8149  0 */\n      0x00\n        /* \"BEP20Token.sol\":8131:8150  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20Token.sol\":8131:8136  owner */\n      dup4\n        /* \"BEP20Token.sol\":8131:8150  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20Token.sol\":8123:8191  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"BEP20Token.sol\":8225:8226  0 */\n      0x00\n        /* \"BEP20Token.sol\":8206:8227  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20Token.sol\":8206:8213  spender */\n      dup3\n        /* \"BEP20Token.sol\":8206:8227  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20Token.sol\":8198:8266  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"BEP20Token.sol\":8305:8311  amount */\n      dup1\n        /* \"BEP20Token.sol\":8275:8286  _allowances */\n      0x02\n        /* \"BEP20Token.sol\":8275:8293  _allowances[owner] */\n      0x00\n        /* \"BEP20Token.sol\":8287:8292  owner */\n      dup6\n        /* \"BEP20Token.sol\":8275:8293  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":8275:8302  _allowances[owner][spender] */\n      0x00\n        /* \"BEP20Token.sol\":8294:8301  spender */\n      dup5\n        /* \"BEP20Token.sol\":8275:8302  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":8275:8311  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20Token.sol\":8339:8346  spender */\n      dup2\n        /* \"BEP20Token.sol\":8323:8355  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20Token.sol\":8332:8337  owner */\n      dup4\n        /* \"BEP20Token.sol\":8323:8355  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"BEP20Token.sol\":8348:8354  amount */\n      dup4\n        /* \"BEP20Token.sol\":8323:8355  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20Token.sol\":8041:8361  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20Token.sol\":5909:6378  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_83:\n        /* \"BEP20Token.sol\":6021:6022  0 */\n      0x00\n        /* \"BEP20Token.sol\":6003:6023  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20Token.sol\":6003:6009  sender */\n      dup4\n        /* \"BEP20Token.sol\":6003:6023  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20Token.sol\":5995:6065  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"BEP20Token.sol\":6101:6102  0 */\n      0x00\n        /* \"BEP20Token.sol\":6080:6103  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20Token.sol\":6080:6089  recipient */\n      dup3\n        /* \"BEP20Token.sol\":6080:6103  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20Token.sol\":6072:6143  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"BEP20Token.sol\":6172:6243  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_137\n        /* \"BEP20Token.sol\":6194:6200  amount */\n      dup2\n        /* \"BEP20Token.sol\":6172:6243  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n        /* \"BEP20Token.sol\":6172:6181  _balances */\n      0x01\n        /* \"BEP20Token.sol\":6172:6189  _balances[sender] */\n      0x00\n        /* \"BEP20Token.sol\":6182:6188  sender */\n      dup8\n        /* \"BEP20Token.sol\":6172:6189  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20Token.sol\":6172:6193  _balances[sender].sub */\n      tag_88\n      swap1\n        /* \"BEP20Token.sol\":6172:6243  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"BEP20Token.sol\":6152:6161  _balances */\n      0x01\n        /* \"BEP20Token.sol\":6152:6169  _balances[sender] */\n      0x00\n        /* \"BEP20Token.sol\":6162:6168  sender */\n      dup6\n        /* \"BEP20Token.sol\":6152:6169  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":6152:6243  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20Token.sol\":6273:6305  _balances[recipient].add(amount) */\n      tag_138\n        /* \"BEP20Token.sol\":6298:6304  amount */\n      dup2\n        /* \"BEP20Token.sol\":6273:6282  _balances */\n      0x01\n        /* \"BEP20Token.sol\":6273:6293  _balances[recipient] */\n      0x00\n        /* \"BEP20Token.sol\":6283:6292  recipient */\n      dup6\n        /* \"BEP20Token.sol\":6273:6293  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20Token.sol\":6273:6297  _balances[recipient].add */\n      tag_95\n      swap1\n        /* \"BEP20Token.sol\":6273:6305  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"BEP20Token.sol\":6250:6259  _balances */\n      0x01\n        /* \"BEP20Token.sol\":6250:6270  _balances[recipient] */\n      0x00\n        /* \"BEP20Token.sol\":6260:6269  recipient */\n      dup5\n        /* \"BEP20Token.sol\":6250:6270  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":6250:6305  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20Token.sol\":6354:6363  recipient */\n      dup2\n        /* \"BEP20Token.sol\":6337:6372  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20Token.sol\":6346:6352  sender */\n      dup4\n        /* \"BEP20Token.sol\":6337:6372  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"BEP20Token.sol\":6365:6371  amount */\n      dup4\n        /* \"BEP20Token.sol\":6337:6372  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20Token.sol\":5909:6378  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":1666:1848  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_88:\n        /* \"SafeMath.sol\":1752:1759  uint256 */\n      0x00\n        /* \"SafeMath.sol\":1781:1782  a */\n      dup4\n        /* \"SafeMath.sol\":1776:1777  b */\n      dup4\n        /* \"SafeMath.sol\":1776:1782  b <= a */\n      gt\n      iszero\n        /* \"SafeMath.sol\":1784:1796  errorMessage */\n      dup3\n        /* \"SafeMath.sol\":1768:1797  require(b <= a, errorMessage) */\n      swap1\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_141:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_141)\n    tag_143:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"SafeMath.sol\":1768:1797  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n        /* \"SafeMath.sol\":1804:1813  uint256 c */\n      0x00\n        /* \"SafeMath.sol\":1820:1821  b */\n      dup4\n        /* \"SafeMath.sol\":1816:1817  a */\n      dup6\n        /* \"SafeMath.sol\":1816:1821  a - b */\n      sub\n        /* \"SafeMath.sol\":1804:1821  uint256 c = a - b */\n      swap1\n      pop\n        /* \"SafeMath.sol\":1841:1842  c */\n      dup1\n        /* \"SafeMath.sol\":1834:1842  return c */\n      swap2\n      pop\n      pop\n        /* \"SafeMath.sol\":1666:1848  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SafeMath.sol\":839:1006  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_95:\n        /* \"SafeMath.sol\":897:904  uint256 */\n      0x00\n        /* \"SafeMath.sol\":913:922  uint256 c */\n      dup1\n        /* \"SafeMath.sol\":929:930  b */\n      dup3\n        /* \"SafeMath.sol\":925:926  a */\n      dup5\n        /* \"SafeMath.sol\":925:930  a + b */\n      add\n        /* \"SafeMath.sol\":913:930  uint256 c = a + b */\n      swap1\n      pop\n        /* \"SafeMath.sol\":950:951  a */\n      dup4\n        /* \"SafeMath.sol\":945:946  c */\n      dup2\n        /* \"SafeMath.sol\":945:951  c >= a */\n      lt\n      iszero\n        /* \"SafeMath.sol\":937:983  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"SafeMath.sol\":999:1000  c */\n      dup1\n        /* \"SafeMath.sol\":992:1000  return c */\n      swap2\n      pop\n      pop\n        /* \"SafeMath.sol\":839:1006  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BEP20Token.sol\":6663:6953  function _mint(address account, uint256 amount) internal {\r... */\n    tag_114:\n        /* \"BEP20Token.sol\":6754:6755  0 */\n      0x00\n        /* \"BEP20Token.sol\":6735:6756  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20Token.sol\":6735:6742  account */\n      dup3\n        /* \"BEP20Token.sol\":6735:6756  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BEP20Token.sol\":6727:6792  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"BEP20Token.sol\":6816:6840  _totalSupply.add(amount) */\n      tag_149\n        /* \"BEP20Token.sol\":6833:6839  amount */\n      dup2\n        /* \"BEP20Token.sol\":6816:6828  _totalSupply */\n      sload(0x03)\n        /* \"BEP20Token.sol\":6816:6832  _totalSupply.add */\n      tag_95\n      swap1\n        /* \"BEP20Token.sol\":6816:6840  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_149:\n        /* \"BEP20Token.sol\":6801:6813  _totalSupply */\n      0x03\n        /* \"BEP20Token.sol\":6801:6840  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20Token.sol\":6868:6898  _balances[account].add(amount) */\n      tag_150\n        /* \"BEP20Token.sol\":6891:6897  amount */\n      dup2\n        /* \"BEP20Token.sol\":6868:6877  _balances */\n      0x01\n        /* \"BEP20Token.sol\":6868:6886  _balances[account] */\n      0x00\n        /* \"BEP20Token.sol\":6878:6885  account */\n      dup6\n        /* \"BEP20Token.sol\":6868:6886  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BEP20Token.sol\":6868:6890  _balances[account].add */\n      tag_95\n      swap1\n        /* \"BEP20Token.sol\":6868:6898  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"BEP20Token.sol\":6847:6856  _balances */\n      0x01\n        /* \"BEP20Token.sol\":6847:6865  _balances[account] */\n      0x00\n        /* \"BEP20Token.sol\":6857:6864  account */\n      dup5\n        /* \"BEP20Token.sol\":6847:6865  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BEP20Token.sol\":6847:6898  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BEP20Token.sol\":6931:6938  account */\n      dup2\n        /* \"BEP20Token.sol\":6910:6947  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BEP20Token.sol\":6927:6928  0 */\n      0x00\n        /* \"BEP20Token.sol\":6910:6947  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"BEP20Token.sol\":6940:6946  amount */\n      dup4\n        /* \"BEP20Token.sol\":6910:6947  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BEP20Token.sol\":6663:6953  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Ownable.sol\":2104:2319  function _transferOwnership(address newOwner) internal {\r... */\n    tag_129:\n        /* \"Ownable.sol\":2194:2195  0 */\n      0x00\n        /* \"Ownable.sol\":2174:2196  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2174:2182  newOwner */\n      dup2\n        /* \"Ownable.sol\":2174:2196  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Ownable.sol\":2166:2239  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"Ownable.sol\":2280:2288  newOwner */\n      dup1\n        /* \"Ownable.sol\":2251:2289  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2272:2278  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":2251:2289  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Ownable.sol\":2305:2313  newOwner */\n      dup1\n        /* \"Ownable.sol\":2296:2302  _owner */\n      0x00\n      dup1\n        /* \"Ownable.sol\":2296:2313  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Ownable.sol\":2104:2319  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158201b4e5ec63eceb7083e7a14e6ecf5d09dd3bd6ce7435c5e1c1407bb503913419b64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506000620000246200023c60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506040518060400160405280600881526020017f54616e6750696e67000000000000000000000000000000000000000000000000815250600690805190602001906200010f92919062000244565b506040518060400160405280600581526020017f5450494e47000000000000000000000000000000000000000000000000000000815250600590805190602001906200015d92919062000244565b506006600460006101000a81548160ff021916908360ff160217905550662386f26fc10000600381905550600354600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6003546040518082815260200191505060405180910390a3620002f3565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200028757805160ff1916838001178555620002b8565b82800160010185558215620002b8579182015b82811115620002b75782518255916020019190600101906200029a565b5b509050620002c79190620002cb565b5090565b620002f091905b80821115620002ec576000816000905550600101620002d2565b5090565b90565b61190580620003036000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104db578063a9059cbb14610541578063dd62ed3e146105a7578063f2fde38b1461061f57610100565b8063893d20e81461037e5780638da5cb5b146103c857806395d89b4114610412578063a0712d681461049557610100565b8063313ce567116100d3578063313ce5671461029257806339509351146102b657806370a082311461031c578063715018a61461037457610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee57806323b872dd1461020c575b600080fd5b61010d610663565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610705565b604051808215151515815260200191505060405180910390f35b6101f6610723565b6040518082815260200191505060405180910390f35b6102786004803603606081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61029a610806565b604051808260ff1660ff16815260200191505060405180910390f35b610302600480360360408110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081d565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561033257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b6040518082815260200191505060405180910390f35b61037c610919565b005b610386610aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d0610ab0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a610ad9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610b7b565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c60565b604051808215151515815260200191505060405180910390f35b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2d565b604051808215151515815260200191505060405180910390f35b610609600480360360408110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4b565b6040518082815260200191505060405180910390f35b6106616004803603602081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd2565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050905090565b6000610719610712610ea7565b8484610eaf565b6001905092915050565b6000600354905090565b600061073a8484846110a6565b6107fb84610746610ea7565b6107f68560405180606001604052806028815260200161181960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107ac610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006108c661082a610ea7565b846108c1856002600061083b610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b610eaf565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610aab610ab0565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b5050505050905090565b6000610b85610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c57610c51610ea7565b836114a8565b60019050919050565b6000610d23610c6d610ea7565b84610d1e8560405180606001604052806025815260200161188a6025913960026000610c97610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b6001905092915050565b6000610d41610d3a610ea7565b84846110a6565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610dda610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ea481611665565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117cf6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118af6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117aa6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118676023913960400191505060405180910390fd5b61121e8160405180606001604052806026815260200161184160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112b381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115608160035461142090919063ffffffff16565b6003819055506115b881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117f36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158201b4e5ec63eceb7083e7a14e6ecf5d09dd3bd6ce7435c5e1c1407bb503913419b64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x24 PUSH3 0x23C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54616E6750696E67000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10F SWAP3 SWAP2 SWAP1 PUSH3 0x244 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5450494E47000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x15D SWAP3 SWAP2 SWAP1 PUSH3 0x244 JUMP JUMPDEST POP PUSH1 0x6 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2F3 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x287 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2B8 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2B8 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2B7 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x29A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2C7 SWAP2 SWAP1 PUSH3 0x2CB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x2F0 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2EC JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2D2 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1905 DUP1 PUSH3 0x303 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158201B4E5EC63ECEB7 ADDMOD RETURNDATACOPY PUSH27 0x14E6ECF5D09DD3BD6CE7435C5E1C1407BB503913419B64736F6C63 NUMBER STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "129:8688:0:-;;;459:300;8:9:-1;5:2;;;30:1;27;20:12;5:2;459:300:0;835:17:3;855:12;:10;;;:12;;:::i;:::-;835:32;;883:9;874:6;;:18;;;;;;;;;;;;;;;;;;937:9;904:43;;933:1;904:43;;;;;;;;;;;;804:149;501:18:0;;;;;;;;;;;;;;;;;:5;:18;;;;;;;;;;;;:::i;:::-;;540:17;;;;;;;;;;;;;;;;;:7;:17;;;;;;;;;;;;:::i;:::-;;590:1;578:9;;:13;;;;;;;;;;;;;;;;;;633:17;618:12;:32;;;;681:12;;657:9;:21;667:10;657:21;;;;;;;;;;;;;;;:36;;;;728:10;707:46;;724:1;707:46;;;740:12;;707:46;;;;;;;;;;;;;;;;;;129:8688;;744:92:1;789:15;820:10;813:17;;744:92;:::o;129:8688:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146104db578063a9059cbb14610541578063dd62ed3e146105a7578063f2fde38b1461061f57610100565b8063893d20e81461037e5780638da5cb5b146103c857806395d89b4114610412578063a0712d681461049557610100565b8063313ce567116100d3578063313ce5671461029257806339509351146102b657806370a082311461031c578063715018a61461037457610100565b806306fdde0314610105578063095ea7b31461018857806318160ddd146101ee57806323b872dd1461020c575b600080fd5b61010d610663565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014d578082015181840152602081019050610132565b50505050905090810190601f16801561017a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101d46004803603604081101561019e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610705565b604051808215151515815260200191505060405180910390f35b6101f6610723565b6040518082815260200191505060405180910390f35b6102786004803603606081101561022257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061072d565b604051808215151515815260200191505060405180910390f35b61029a610806565b604051808260ff1660ff16815260200191505060405180910390f35b610302600480360360408110156102cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061081d565b604051808215151515815260200191505060405180910390f35b61035e6004803603602081101561033257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d0565b6040518082815260200191505060405180910390f35b61037c610919565b005b610386610aa1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d0610ab0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a610ad9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045a57808201518184015260208101905061043f565b50505050905090810190601f1680156104875780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104c1600480360360208110156104ab57600080fd5b8101908080359060200190929190505050610b7b565b604051808215151515815260200191505060405180910390f35b610527600480360360408110156104f157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c60565b604051808215151515815260200191505060405180910390f35b61058d6004803603604081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d2d565b604051808215151515815260200191505060405180910390f35b610609600480360360408110156105bd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4b565b6040518082815260200191505060405180910390f35b6106616004803603602081101561063557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd2565b005b606060068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050905090565b6000610719610712610ea7565b8484610eaf565b6001905092915050565b6000600354905090565b600061073a8484846110a6565b6107fb84610746610ea7565b6107f68560405180606001604052806028815260200161181960289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107ac610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b600190509392505050565b6000600460009054906101000a900460ff16905090565b60006108c661082a610ea7565b846108c1856002600061083b610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b610eaf565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610921610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610aab610ab0565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b715780601f10610b4657610100808354040283529160200191610b71565b820191906000526020600020905b815481529060010190602001808311610b5457829003601f168201915b5050505050905090565b6000610b85610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c57610c51610ea7565b836114a8565b60019050919050565b6000610d23610c6d610ea7565b84610d1e8560405180606001604052806025815260200161188a6025913960026000610c97610ea7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b610eaf565b6001905092915050565b6000610d41610d3a610ea7565b84846110a6565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610dda610ea7565b73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e9b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610ea481611665565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f35576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117cf6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fbb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806118af6022913960400191505060405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561112c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117aa6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806118676023913960400191505060405180910390fd5b61121e8160405180606001604052806026815260200161184160269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546113609092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112b381600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061140d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156113d25780820151818401526020810190506113b7565b50505050905090810190601f1680156113ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561154b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42455032303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115608160035461142090919063ffffffff16565b6003819055506115b881600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461142090919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117f36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a723158201b4e5ec63eceb7083e7a14e6ecf5d09dd3bd6ce7435c5e1c1407bb503913419b64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x541 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x495 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x374 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x663 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x132 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x705 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x81D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x45A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x487 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x527 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x609 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x661 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x719 PUSH2 0x712 PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP5 DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x746 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x7F6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1819 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7AC PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C6 PUSH2 0x82A PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0x8C1 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x83B PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB71 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB46 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB71 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB54 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB85 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC57 PUSH2 0xC51 PUSH2 0xEA7 JUMP JUMPDEST DUP4 PUSH2 0x14A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH2 0xC6D PUSH2 0xEA7 JUMP JUMPDEST DUP5 PUSH2 0xD1E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x188A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0xC97 PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD41 PUSH2 0xD3A PUSH2 0xEA7 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDDA PUSH2 0xEA7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0x1665 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF35 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17CF PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18AF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17AA PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1867 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x121E DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1841 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1360 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12B3 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x140D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13B7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x154B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1560 DUP2 PUSH1 0x3 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x15B8 DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1420 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x16EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A723158201B4E5EC63ECEB7 ADDMOD RETURNDATACOPY PUSH27 0x14E6ECF5D09DD3BD6CE7435C5E1C1407BB503913419B64736F6C63 NUMBER STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "129:8688:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:8688:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1229:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1229:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2860:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2860:170:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1364:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3475:292;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3475:292:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;957:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4149:200;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4149:200:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1513:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1513:106:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1628:130:3;;;:::i;:::-;;819:79:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1026:73:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1093:83:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1093:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5290:120;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5290:120:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4821:251;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4821:251:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1892:150;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1892:150:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2574:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2574:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1903:103:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1903:103:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1229:79:0;1268:13;1297:5;1290:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1229:79;:::o;2860:170::-;2928:4;2967:39;2976:12;:10;:12::i;:::-;2990:7;2999:6;2967:8;:39::i;:::-;3020:4;3013:11;;2860:170;;;;:::o;1364:87::-;1410:7;1433:12;;1426:19;;1364:87;:::o;3475:292::-;3566:4;3579:36;3589:6;3597:9;3608:6;3579:9;:36::i;:::-;3622:121;3631:6;3639:12;:10;:12::i;:::-;3653:89;3691:6;3653:89;;;;;;;;;;;;;;;;;:11;:19;3665:6;3653:19;;;;;;;;;;;;;;;:33;3673:12;:10;:12::i;:::-;3653:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3622:8;:121::i;:::-;3757:4;3750:11;;3475:292;;;;;:::o;957:79::-;1000:5;1021:9;;;;;;;;;;;1014:16;;957:79;:::o;4149:200::-;4229:4;4242:83;4251:12;:10;:12::i;:::-;4265:7;4274:50;4313:10;4274:11;:25;4286:12;:10;:12::i;:::-;4274:25;;;;;;;;;;;;;;;:34;4300:7;4274:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;4242:8;:83::i;:::-;4339:4;4332:11;;4149:200;;;;:::o;1513:106::-;1572:7;1595:9;:18;1605:7;1595:18;;;;;;;;;;;;;;;;1588:25;;1513:106;;;:::o;1628:130:3:-;1230:12;:10;:12::i;:::-;1220:22;;:6;;;;;;;;;;;:22;;;1212:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1723:1;1686:40;;1707:6;;;;;;;;;;;1686:40;;;;;;;;;;;;1750:1;1733:6;;:19;;;;;;;;;;;;;;;;;;1628:130::o;819:79:0:-;862:7;885;:5;:7::i;:::-;878:14;;819:79;:::o;1026:73:3:-;1064:7;1087:6;;;;;;;;;;;1080:13;;1026:73;:::o;1093:83:0:-;1134:13;1163:7;1156:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:83;:::o;5290:120::-;5346:4;1230:12:3;:10;:12::i;:::-;1220:22;;:6;;;;;;;;;;;:22;;;1212:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5359:27:0;5365:12;:10;:12::i;:::-;5379:6;5359:5;:27::i;:::-;5400:4;5393:11;;5290:120;;;:::o;4821:251::-;4906:4;4919:129;4928:12;:10;:12::i;:::-;4942:7;4951:96;4990:15;4951:96;;;;;;;;;;;;;;;;;:11;:25;4963:12;:10;:12::i;:::-;4951:25;;;;;;;;;;;;;;;:34;4977:7;4951:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4919:8;:129::i;:::-;5062:4;5055:11;;4821:251;;;;:::o;1892:150::-;1963:4;1976:42;1986:12;:10;:12::i;:::-;2000:9;2011:6;1976:9;:42::i;:::-;2032:4;2025:11;;1892:150;;;;:::o;2574:130::-;2648:7;2671:11;:18;2683:5;2671:18;;;;;;;;;;;;;;;:27;2690:7;2671:27;;;;;;;;;;;;;;;;2664:34;;2574:130;;;;:::o;1903:103:3:-;1230:12;:10;:12::i;:::-;1220:22;;:6;;;;;;;;;;;:22;;;1212:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:28;1991:8;1972:18;:28::i;:::-;1903:103;:::o;744:92:1:-;789:15;820:10;813:17;;744:92;:::o;8041:320:0:-;8148:1;8131:19;;:5;:19;;;;8123:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8225:1;8206:21;;:7;:21;;;;8198:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8305:6;8275:11;:18;8287:5;8275:18;;;;;;;;;;;;;;;:27;8294:7;8275:27;;;;;;;;;;;;;;;:36;;;;8339:7;8323:32;;8332:5;8323:32;;;8348:6;8323:32;;;;;;;;;;;;;;;;;;8041:320;;;:::o;5909:469::-;6021:1;6003:20;;:6;:20;;;;5995:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6101:1;6080:23;;:9;:23;;;;6072:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6172;6194:6;6172:71;;;;;;;;;;;;;;;;;:9;:17;6182:6;6172:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;6152:9;:17;6162:6;6152:17;;;;;;;;;;;;;;;:91;;;;6273:32;6298:6;6273:9;:20;6283:9;6273:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;6250:9;:20;6260:9;6250:20;;;;;;;;;;;;;;;:55;;;;6354:9;6337:35;;6346:6;6337:35;;;6365:6;6337:35;;;;;;;;;;;;;;;;;;5909:469;;;:::o;1666:182:4:-;1752:7;1781:1;1776;:6;;1784:12;1768:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1768:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1804:9;1820:1;1816;:5;1804:17;;1841:1;1834:8;;;1666:182;;;;;:::o;839:167::-;897:7;913:9;929:1;925;:5;913:17;;950:1;945;:6;;937:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:1;992:8;;;839:167;;;;:::o;6663:290:0:-;6754:1;6735:21;;:7;:21;;;;6727:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6816:24;6833:6;6816:12;;:16;;:24;;;;:::i;:::-;6801:12;:39;;;;6868:30;6891:6;6868:9;:18;6878:7;6868:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6847:9;:18;6857:7;6847:18;;;;;;;;;;;;;;;:51;;;;6931:7;6910:37;;6927:1;6910:37;;;6940:6;6910:37;;;;;;;;;;;;;;;;;;6663:290;;:::o;2104:215:3:-;2194:1;2174:22;;:8;:22;;;;2166:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:8;2251:38;;2272:6;;;;;;;;;;;2251:38;;;;;;;;;;;;2305:8;2296:6;;:17;;;;;;;;;;;;;;;;;;2104:215;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1281000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1263",
								"decimals()": "1084",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1119",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1106",
								"renounceOwnership()": "24386",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "MSTORE"
								},
								{
									"begin": 459,
									"end": 759,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 459,
									"end": 759,
									"name": "POP"
								},
								{
									"begin": 835,
									"end": 852,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 855,
									"end": 865,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 855,
									"end": 865,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 855,
									"end": 865,
									"name": "SHL"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "SHR"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 855,
									"end": 867,
									"name": "JUMPDEST"
								},
								{
									"begin": 835,
									"end": 867,
									"name": "SWAP1"
								},
								{
									"begin": 835,
									"end": 867,
									"name": "POP"
								},
								{
									"begin": 883,
									"end": 892,
									"name": "DUP1"
								},
								{
									"begin": 874,
									"end": 880,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 874,
									"end": 880,
									"name": "DUP1"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "EXP"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "DUP2"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "SLOAD"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "DUP2"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "MUL"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "NOT"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "AND"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "SWAP1"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "DUP4"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "AND"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "MUL"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "OR"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "SWAP1"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "SSTORE"
								},
								{
									"begin": 874,
									"end": 892,
									"name": "POP"
								},
								{
									"begin": 937,
									"end": 946,
									"name": "DUP1"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "AND"
								},
								{
									"begin": 933,
									"end": 934,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "AND"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "MLOAD"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "MLOAD"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "DUP1"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "SWAP2"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "SUB"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "SWAP1"
								},
								{
									"begin": 904,
									"end": 947,
									"name": "LOG3"
								},
								{
									"begin": 804,
									"end": 953,
									"name": "POP"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "MLOAD"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "DUP1"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "ADD"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "MSTORE"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "DUP1"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "DUP2"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "MSTORE"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "ADD"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH",
									"value": "54616E6750696E67000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "DUP2"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "MSTORE"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "POP"
								},
								{
									"begin": 501,
									"end": 506,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "SWAP1"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "DUP1"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "MLOAD"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "SWAP1"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "ADD"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "SWAP1"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "SWAP3"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "SWAP2"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "SWAP1"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "JUMPDEST"
								},
								{
									"begin": 501,
									"end": 519,
									"name": "POP"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MLOAD"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP1"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "ADD"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MSTORE"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP1"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP2"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MSTORE"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "ADD"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"value": "5450494E47000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP2"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MSTORE"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "POP"
								},
								{
									"begin": 540,
									"end": 547,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "DUP1"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "MLOAD"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "ADD"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP3"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP2"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "SWAP1"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "JUMPDEST"
								},
								{
									"begin": 540,
									"end": 557,
									"name": "POP"
								},
								{
									"begin": 590,
									"end": 591,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 578,
									"end": 587,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 578,
									"end": 587,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "EXP"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "DUP2"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "SLOAD"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "DUP2"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "MUL"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "NOT"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "AND"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "SWAP1"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "DUP4"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "AND"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "MUL"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "OR"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "SWAP1"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "SSTORE"
								},
								{
									"begin": 578,
									"end": 591,
									"name": "POP"
								},
								{
									"begin": 633,
									"end": 650,
									"name": "PUSH",
									"value": "2386F26FC10000"
								},
								{
									"begin": 618,
									"end": 630,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 618,
									"end": 650,
									"name": "DUP2"
								},
								{
									"begin": 618,
									"end": 650,
									"name": "SWAP1"
								},
								{
									"begin": 618,
									"end": 650,
									"name": "SSTORE"
								},
								{
									"begin": 618,
									"end": 650,
									"name": "POP"
								},
								{
									"begin": 681,
									"end": 693,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 681,
									"end": 693,
									"name": "SLOAD"
								},
								{
									"begin": 657,
									"end": 666,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 667,
									"end": 677,
									"name": "CALLER"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "AND"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "AND"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "DUP2"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "MSTORE"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "DUP2"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "MSTORE"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "KECCAK256"
								},
								{
									"begin": 657,
									"end": 693,
									"name": "DUP2"
								},
								{
									"begin": 657,
									"end": 693,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 693,
									"name": "SSTORE"
								},
								{
									"begin": 657,
									"end": 693,
									"name": "POP"
								},
								{
									"begin": 728,
									"end": 738,
									"name": "CALLER"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "AND"
								},
								{
									"begin": 724,
									"end": 725,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "AND"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 740,
									"end": 752,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 740,
									"end": 752,
									"name": "SLOAD"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "MLOAD"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "DUP1"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "DUP3"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "DUP2"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "MSTORE"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "ADD"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "SWAP2"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "POP"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "POP"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "MLOAD"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "DUP1"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "SWAP2"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "SUB"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "SWAP1"
								},
								{
									"begin": 707,
									"end": 753,
									"name": "LOG3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMP"
								},
								{
									"begin": 744,
									"end": 836,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 744,
									"end": 836,
									"name": "JUMPDEST"
								},
								{
									"begin": 789,
									"end": 804,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 820,
									"end": 830,
									"name": "CALLER"
								},
								{
									"begin": 813,
									"end": 830,
									"name": "SWAP1"
								},
								{
									"begin": 813,
									"end": 830,
									"name": "POP"
								},
								{
									"begin": 744,
									"end": 836,
									"name": "SWAP1"
								},
								{
									"begin": 744,
									"end": 836,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SLOAD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "AND"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ISZERO"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "MUL"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SUB"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "AND"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DIV"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "MSTORE"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "KECCAK256"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DIV"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "LT"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPI"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "MLOAD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "NOT"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "AND"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP4"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "OR"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP6"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SSTORE"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP6"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SSTORE"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ISZERO"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPI"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "GT"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ISZERO"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPI"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "MLOAD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SSTORE"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "POP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "POP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "POP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP3"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "GT"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ISZERO"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPI"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP2"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SSTORE"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "POP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "ADD"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "POP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMP"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "SWAP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "JUMPDEST"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "DUP1"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "CODECOPY"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 129,
									"end": 8817,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201b4e5ec63eceb7083e7a14e6ecf5d09dd3bd6ce7435c5e1c1407bb503913419b64736f6c63430005100032",
									".code": [
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "MSTORE"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "POP"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "LT"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "SHR"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "GT"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "GT"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMP"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMP"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "GT"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMP"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "EQ"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPI"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "JUMPDEST"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "DUP1"
										},
										{
											"begin": 129,
											"end": 8817,
											"name": "REVERT"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMPDEST"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMPDEST"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "MLOAD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP3"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SUB"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP3"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "MSTORE"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP4"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "MLOAD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "MSTORE"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "MLOAD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP4"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "AND"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "ISZERO"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMPI"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP3"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SUB"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "MLOAD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP4"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SUB"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "EXP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SUB"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "NOT"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "AND"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "MSTORE"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "ADD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMPDEST"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP3"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "MLOAD"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "DUP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP2"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SUB"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "RETURN"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP2"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "ADD"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "AND"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "ADD"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP3"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP2"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "ADD"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP3"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP2"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "JUMPDEST"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "MLOAD"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP3"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "ISZERO"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "ISZERO"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "ISZERO"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "ISZERO"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP2"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "MSTORE"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "ADD"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP2"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "MLOAD"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "DUP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP2"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SUB"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "RETURN"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "JUMPDEST"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "JUMPDEST"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "DUP3"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "DUP2"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "MSTORE"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "ADD"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "SWAP2"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "MLOAD"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "DUP1"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "SWAP2"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "SUB"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "RETURN"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP3"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "AND"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP3"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP3"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "MLOAD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP3"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ISZERO"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP2"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "MSTORE"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "ADD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "MLOAD"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP2"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SUB"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "RETURN"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "DUP3"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SUB"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "RETURN"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "AND"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP3"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP3"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP3"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "ISZERO"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "ISZERO"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "ISZERO"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "ISZERO"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SUB"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "RETURN"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "JUMPDEST"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "DUP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "DUP2"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "ADD"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "DUP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "DUP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "AND"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "ADD"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP3"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP2"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "JUMPDEST"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "MLOAD"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "DUP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "DUP3"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "DUP2"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "MSTORE"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "ADD"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP2"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "MLOAD"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "DUP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP2"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SUB"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "RETURN"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "JUMPDEST"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "JUMPDEST"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "STOP"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "JUMPDEST"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "JUMPDEST"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "MLOAD"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "DUP1"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "DUP3"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "AND"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "AND"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "DUP2"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "MSTORE"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "ADD"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "SWAP2"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "POP"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "POP"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "MLOAD"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "DUP1"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "SWAP2"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "SUB"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "RETURN"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "MLOAD"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "DUP3"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "AND"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "AND"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "DUP2"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "MSTORE"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "ADD"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "SWAP2"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "MLOAD"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "SWAP2"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "SUB"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "RETURN"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "JUMPDEST"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "JUMPDEST"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP3"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SUB"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP3"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "MSTORE"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP4"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "MSTORE"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP4"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "AND"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "ISZERO"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "JUMPI"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP3"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SUB"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP4"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SUB"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "EXP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SUB"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "NOT"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "AND"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "MSTORE"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "ADD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "JUMPDEST"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP3"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "MLOAD"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP2"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SUB"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "RETURN"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "JUMPDEST"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "DUP2"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP3"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP2"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "JUMPDEST"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "MLOAD"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "DUP3"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "ISZERO"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "ISZERO"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "ISZERO"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "ISZERO"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "DUP2"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "MSTORE"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP2"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "MLOAD"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP2"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SUB"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "RETURN"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "JUMPDEST"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "AND"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP3"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP3"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "JUMPDEST"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "MLOAD"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP3"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "ISZERO"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "ISZERO"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "ISZERO"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "ISZERO"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP2"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "MSTORE"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "ADD"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "MLOAD"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "DUP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SUB"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP1"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "RETURN"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "JUMPDEST"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP2"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "ADD"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "AND"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "ADD"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP3"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP2"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "ADD"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP3"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP2"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "JUMPDEST"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "MLOAD"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP3"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "ISZERO"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "ISZERO"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "ISZERO"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "ISZERO"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP2"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "MSTORE"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "ADD"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP2"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "MLOAD"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP2"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SUB"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "RETURN"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "JUMPDEST"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP2"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "AND"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP3"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP2"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "AND"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP3"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP2"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "POP"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "POP"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "POP"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "JUMPDEST"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "MLOAD"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP3"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP2"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "MSTORE"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "ADD"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP2"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "POP"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "POP"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "MLOAD"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "DUP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP2"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SUB"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP1"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "RETURN"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "JUMPDEST"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "DUP1"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "DUP2"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "DUP1"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "DUP1"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "AND"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "ADD"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "SWAP3"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "SWAP2"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "SWAP1"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "JUMPDEST"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "STOP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 1281,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SLOAD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ISZERO"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MUL"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SUB"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DIV"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DIV"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MUL"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MLOAD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MSTORE"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP3"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MSTORE"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP3"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SLOAD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ISZERO"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MUL"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SUB"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DIV"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ISZERO"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "JUMPI"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "LT"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "JUMPI"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP4"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SLOAD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DIV"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MUL"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP4"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MSTORE"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "JUMP"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP3"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MSTORE"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "KECCAK256"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SLOAD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "MSTORE"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP4"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "GT"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "JUMPI"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP3"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SUB"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "AND"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "DUP3"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "ADD"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP2"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "POP"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "SWAP1"
										},
										{
											"begin": 1290,
											"end": 1302,
											"name": "POP"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "SWAP1"
										},
										{
											"begin": 1229,
											"end": 1308,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "JUMPDEST"
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 3006,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2976,
											"end": 2988,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2976,
											"end": 2986,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2976,
											"end": 2988,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 2988,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2976,
											"end": 2988,
											"name": "JUMPDEST"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP5"
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP5"
										},
										{
											"begin": 2967,
											"end": 2975,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2967,
											"end": 3006,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 3006,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2967,
											"end": 3006,
											"name": "JUMPDEST"
										},
										{
											"begin": 3020,
											"end": 3024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3013,
											"end": 3024,
											"name": "SWAP1"
										},
										{
											"begin": 3013,
											"end": 3024,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP3"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "SWAP2"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "POP"
										},
										{
											"begin": 2860,
											"end": 3030,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "JUMPDEST"
										},
										{
											"begin": 1410,
											"end": 1417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "SLOAD"
										},
										{
											"begin": 1426,
											"end": 1445,
											"name": "SWAP1"
										},
										{
											"begin": 1426,
											"end": 1445,
											"name": "POP"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "SWAP1"
										},
										{
											"begin": 1364,
											"end": 1451,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "JUMPDEST"
										},
										{
											"begin": 3566,
											"end": 3570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 3589,
											"end": 3595,
											"name": "DUP5"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP5"
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP5"
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 3579,
											"end": 3615,
											"name": "JUMPDEST"
										},
										{
											"begin": 3622,
											"end": 3743,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 3631,
											"end": 3637,
											"name": "DUP5"
										},
										{
											"begin": 3639,
											"end": 3651,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3639,
											"end": 3649,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3639,
											"end": 3651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3639,
											"end": 3651,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 3639,
											"end": 3651,
											"name": "JUMPDEST"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3691,
											"end": 3697,
											"name": "DUP6"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "MLOAD"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "SWAP2"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "CODECOPY"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "DUP12"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "AND"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "AND"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "DUP2"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "MSTORE"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "ADD"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "SWAP1"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "DUP2"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "MSTORE"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "ADD"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3672,
											"name": "KECCAK256"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 3673,
											"end": 3683,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "JUMPDEST"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "AND"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "AND"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "DUP2"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "MSTORE"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "ADD"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "SWAP1"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "DUP2"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "MSTORE"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "ADD"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "KECCAK256"
										},
										{
											"begin": 3653,
											"end": 3686,
											"name": "SLOAD"
										},
										{
											"begin": 3653,
											"end": 3690,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 3653,
											"end": 3690,
											"name": "SWAP1"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "SWAP3"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "SWAP2"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "AND"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 3653,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3622,
											"end": 3630,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 3622,
											"end": 3743,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3622,
											"end": 3743,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 3622,
											"end": 3743,
											"name": "JUMPDEST"
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3750,
											"end": 3761,
											"name": "SWAP1"
										},
										{
											"begin": 3750,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP4"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "SWAP3"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3475,
											"end": 3767,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "SLOAD"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "EXP"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "DIV"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "AND"
										},
										{
											"begin": 1014,
											"end": 1030,
											"name": "SWAP1"
										},
										{
											"begin": 1014,
											"end": 1030,
											"name": "POP"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 957,
											"end": 1036,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "JUMPDEST"
										},
										{
											"begin": 4229,
											"end": 4233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4325,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 4251,
											"end": 4261,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "JUMPDEST"
										},
										{
											"begin": 4265,
											"end": 4272,
											"name": "DUP5"
										},
										{
											"begin": 4274,
											"end": 4324,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 4313,
											"end": 4323,
											"name": "DUP6"
										},
										{
											"begin": 4274,
											"end": 4285,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 4286,
											"end": 4296,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "JUMPDEST"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "AND"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "AND"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "DUP2"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "MSTORE"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "ADD"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "SWAP1"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "DUP2"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "MSTORE"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "ADD"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "KECCAK256"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4300,
											"end": 4307,
											"name": "DUP10"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "AND"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "AND"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "DUP2"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "MSTORE"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "ADD"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "SWAP1"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "DUP2"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "MSTORE"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "ADD"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "KECCAK256"
										},
										{
											"begin": 4274,
											"end": 4308,
											"name": "SLOAD"
										},
										{
											"begin": 4274,
											"end": 4312,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 4274,
											"end": 4312,
											"name": "SWAP1"
										},
										{
											"begin": 4274,
											"end": 4324,
											"name": "SWAP2"
										},
										{
											"begin": 4274,
											"end": 4324,
											"name": "SWAP1"
										},
										{
											"begin": 4274,
											"end": 4324,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4274,
											"end": 4324,
											"name": "AND"
										},
										{
											"begin": 4274,
											"end": 4324,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4274,
											"end": 4324,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 4274,
											"end": 4324,
											"name": "JUMPDEST"
										},
										{
											"begin": 4242,
											"end": 4250,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 4242,
											"end": 4325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4242,
											"end": 4325,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 4242,
											"end": 4325,
											"name": "JUMPDEST"
										},
										{
											"begin": 4339,
											"end": 4343,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4332,
											"end": 4343,
											"name": "SWAP1"
										},
										{
											"begin": 4332,
											"end": 4343,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP3"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "POP"
										},
										{
											"begin": 4149,
											"end": 4349,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "JUMPDEST"
										},
										{
											"begin": 1572,
											"end": 1579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1612,
											"name": "DUP4"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "DUP2"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "MSTORE"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "ADD"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "DUP2"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "MSTORE"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "ADD"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "KECCAK256"
										},
										{
											"begin": 1595,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1588,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1588,
											"end": 1613,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP2"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1619,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPDEST"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SLOAD"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "EXP"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DIV"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "EQ"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "JUMPI"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MLOAD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP3"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SUB"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP3"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MLOAD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SUB"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "REVERT"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "JUMPDEST"
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "AND"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP1"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP1"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SLOAD"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP1"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "EXP"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "SWAP1"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DIV"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "AND"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "AND"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "MLOAD"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "MLOAD"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "DUP1"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "SWAP2"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "SUB"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "SWAP1"
										},
										{
											"begin": 1686,
											"end": 1726,
											"name": "LOG3"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP1"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "EXP"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SLOAD"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP2"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "NOT"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "DUP4"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "AND"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "MUL"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "OR"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SWAP1"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "SSTORE"
										},
										{
											"begin": 1733,
											"end": 1752,
											"name": "POP"
										},
										{
											"begin": 1628,
											"end": 1758,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 885,
											"end": 892,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 885,
											"end": 892,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 892,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 885,
											"end": 892,
											"name": "JUMPDEST"
										},
										{
											"begin": 878,
											"end": 892,
											"name": "SWAP1"
										},
										{
											"begin": 878,
											"end": 892,
											"name": "POP"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "SWAP1"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "SLOAD"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "EXP"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DIV"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "AND"
										},
										{
											"begin": 1080,
											"end": 1093,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1093,
											"name": "POP"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 1026,
											"end": 1099,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "JUMPDEST"
										},
										{
											"begin": 1134,
											"end": 1147,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SLOAD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ISZERO"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MUL"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SUB"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DIV"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DIV"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MUL"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MLOAD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP3"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP3"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SLOAD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ISZERO"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MUL"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SUB"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DIV"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ISZERO"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "JUMPI"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "LT"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "JUMPI"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP4"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SLOAD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DIV"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MUL"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP4"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "JUMP"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP3"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "KECCAK256"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SLOAD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "MSTORE"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP4"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "GT"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "JUMPI"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP3"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SUB"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "DUP3"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1156,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1176,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "JUMPDEST"
										},
										{
											"begin": 5346,
											"end": 5350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPDEST"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SLOAD"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "EXP"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DIV"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "EQ"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "JUMPI"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MLOAD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP3"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SUB"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP3"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MLOAD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SUB"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "REVERT"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "JUMPDEST"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5365,
											"end": 5375,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "JUMPDEST"
										},
										{
											"begin": 5379,
											"end": 5385,
											"name": "DUP4"
										},
										{
											"begin": 5359,
											"end": 5364,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 5359,
											"end": 5386,
											"name": "JUMPDEST"
										},
										{
											"begin": 5400,
											"end": 5404,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5393,
											"end": 5404,
											"name": "SWAP1"
										},
										{
											"begin": 5393,
											"end": 5404,
											"name": "POP"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP2"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5290,
											"end": 5410,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "JUMPDEST"
										},
										{
											"begin": 4906,
											"end": 4910,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 5048,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4928,
											"end": 4940,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 4928,
											"end": 4938,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4928,
											"end": 4940,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4928,
											"end": 4940,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 4928,
											"end": 4940,
											"name": "JUMPDEST"
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP5"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 4990,
											"end": 5005,
											"name": "DUP6"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "MLOAD"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "DUP1"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "ADD"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "MSTORE"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "DUP1"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "DUP2"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "MSTORE"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "ADD"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "SWAP2"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "CODECOPY"
										},
										{
											"begin": 4951,
											"end": 4962,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 4963,
											"end": 4973,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 4963,
											"end": 4975,
											"name": "JUMPDEST"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "AND"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "AND"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "DUP2"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "MSTORE"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "ADD"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "SWAP1"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "DUP2"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "MSTORE"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "ADD"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "KECCAK256"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "DUP11"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "AND"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "AND"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "DUP2"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "MSTORE"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "ADD"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "SWAP1"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "DUP2"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "MSTORE"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "ADD"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "KECCAK256"
										},
										{
											"begin": 4951,
											"end": 4985,
											"name": "SLOAD"
										},
										{
											"begin": 4951,
											"end": 4989,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4951,
											"end": 4989,
											"name": "SWAP1"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "SWAP3"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "SWAP2"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "SWAP1"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "AND"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 4951,
											"end": 5047,
											"name": "JUMPDEST"
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 4919,
											"end": 5048,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4919,
											"end": 5048,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4919,
											"end": 5048,
											"name": "JUMPDEST"
										},
										{
											"begin": 5062,
											"end": 5066,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5055,
											"end": 5066,
											"name": "SWAP1"
										},
										{
											"begin": 5055,
											"end": 5066,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP3"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "SWAP2"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "POP"
										},
										{
											"begin": 4821,
											"end": 5072,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "JUMPDEST"
										},
										{
											"begin": 1963,
											"end": 1967,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "JUMPDEST"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP5"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5"
										},
										{
											"begin": 1976,
											"end": 1985,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 1976,
											"end": 2018,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1976,
											"end": 2018,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 1976,
											"end": 2018,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2025,
											"end": 2036,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP3"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "SWAP2"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "POP"
										},
										{
											"begin": 1892,
											"end": 2042,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "JUMPDEST"
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2688,
											"name": "DUP5"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "AND"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "AND"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "DUP2"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "MSTORE"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "ADD"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "SWAP1"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "DUP2"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "MSTORE"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "ADD"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "KECCAK256"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2697,
											"name": "DUP4"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "AND"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "AND"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "DUP2"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "MSTORE"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "ADD"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "SWAP1"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "DUP2"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "MSTORE"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "ADD"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "KECCAK256"
										},
										{
											"begin": 2671,
											"end": 2698,
											"name": "SLOAD"
										},
										{
											"begin": 2664,
											"end": 2698,
											"name": "SWAP1"
										},
										{
											"begin": 2664,
											"end": 2698,
											"name": "POP"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP3"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "SWAP2"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "POP"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "POP"
										},
										{
											"begin": 2574,
											"end": 2704,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "JUMPDEST"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 1230,
											"end": 1242,
											"name": "JUMPDEST"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SLOAD"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "EXP"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DIV"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "AND"
										},
										{
											"begin": 1220,
											"end": 1242,
											"name": "EQ"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "JUMPI"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MLOAD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP3"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SUB"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP3"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MSTORE"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "ADD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "MLOAD"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP2"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SUB"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "SWAP1"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "REVERT"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 1212,
											"end": 1279,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2000,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 1991,
											"end": 1999,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 1990,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 1972,
											"end": 2000,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2000,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 1972,
											"end": 2000,
											"name": "JUMPDEST"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "POP"
										},
										{
											"begin": 1903,
											"end": 2006,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 744,
											"end": 836,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 744,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 789,
											"end": 804,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 820,
											"end": 830,
											"name": "CALLER"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SWAP1"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 836,
											"name": "SWAP1"
										},
										{
											"begin": 744,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8041,
											"end": 8361,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 8041,
											"end": 8361,
											"name": "JUMPDEST"
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8150,
											"name": "AND"
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "DUP4"
										},
										{
											"begin": 8131,
											"end": 8150,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8131,
											"end": 8150,
											"name": "AND"
										},
										{
											"begin": 8131,
											"end": 8150,
											"name": "EQ"
										},
										{
											"begin": 8131,
											"end": 8150,
											"name": "ISZERO"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "JUMPI"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "MLOAD"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP2"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "MSTORE"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "ADD"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP1"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP1"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "ADD"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP3"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP2"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "SUB"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP3"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "MSTORE"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP2"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "MSTORE"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "ADD"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP1"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "SWAP2"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "CODECOPY"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "ADD"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "SWAP2"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "POP"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "POP"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "MLOAD"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "DUP1"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "SWAP2"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "SUB"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "SWAP1"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "REVERT"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 8123,
											"end": 8191,
											"name": "JUMPDEST"
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "AND"
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "DUP3"
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "AND"
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "EQ"
										},
										{
											"begin": 8206,
											"end": 8227,
											"name": "ISZERO"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "JUMPI"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "MLOAD"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP2"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "MSTORE"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "ADD"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP1"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP1"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "ADD"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP3"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP2"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "SUB"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP3"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "MSTORE"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP2"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "MSTORE"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "ADD"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP1"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "SWAP2"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "CODECOPY"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "ADD"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "SWAP2"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "POP"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "POP"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "MLOAD"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "DUP1"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "SWAP2"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "SUB"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "SWAP1"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "REVERT"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 8198,
											"end": 8266,
											"name": "JUMPDEST"
										},
										{
											"begin": 8305,
											"end": 8311,
											"name": "DUP1"
										},
										{
											"begin": 8275,
											"end": 8286,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8292,
											"name": "DUP6"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "AND"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "AND"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "DUP2"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "MSTORE"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "ADD"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "SWAP1"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "DUP2"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "MSTORE"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "ADD"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8293,
											"name": "KECCAK256"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8301,
											"name": "DUP5"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "AND"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "AND"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "DUP2"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "MSTORE"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "ADD"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "SWAP1"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "DUP2"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "MSTORE"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "ADD"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8302,
											"name": "KECCAK256"
										},
										{
											"begin": 8275,
											"end": 8311,
											"name": "DUP2"
										},
										{
											"begin": 8275,
											"end": 8311,
											"name": "SWAP1"
										},
										{
											"begin": 8275,
											"end": 8311,
											"name": "SSTORE"
										},
										{
											"begin": 8275,
											"end": 8311,
											"name": "POP"
										},
										{
											"begin": 8339,
											"end": 8346,
											"name": "DUP2"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "AND"
										},
										{
											"begin": 8332,
											"end": 8337,
											"name": "DUP4"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "AND"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 8348,
											"end": 8354,
											"name": "DUP4"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "MLOAD"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "DUP1"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "DUP3"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "DUP2"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "MSTORE"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "ADD"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "SWAP2"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "POP"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "POP"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "MLOAD"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "DUP1"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "SWAP2"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "SUB"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "SWAP1"
										},
										{
											"begin": 8323,
											"end": 8355,
											"name": "LOG3"
										},
										{
											"begin": 8041,
											"end": 8361,
											"name": "POP"
										},
										{
											"begin": 8041,
											"end": 8361,
											"name": "POP"
										},
										{
											"begin": 8041,
											"end": 8361,
											"name": "POP"
										},
										{
											"begin": 8041,
											"end": 8361,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5909,
											"end": 6378,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5909,
											"end": 6378,
											"name": "JUMPDEST"
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP4"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "EQ"
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "ISZERO"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "JUMPI"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "MLOAD"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP2"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "MSTORE"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "ADD"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP1"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP1"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "ADD"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP3"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP2"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "SUB"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP3"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "MSTORE"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP2"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "MSTORE"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "ADD"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP1"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "SWAP2"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "CODECOPY"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "ADD"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "SWAP2"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "POP"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "POP"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "MLOAD"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "DUP1"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "SWAP2"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "SUB"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "SWAP1"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "REVERT"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5995,
											"end": 6065,
											"name": "JUMPDEST"
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6080,
											"end": 6103,
											"name": "AND"
										},
										{
											"begin": 6080,
											"end": 6089,
											"name": "DUP3"
										},
										{
											"begin": 6080,
											"end": 6103,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6080,
											"end": 6103,
											"name": "AND"
										},
										{
											"begin": 6080,
											"end": 6103,
											"name": "EQ"
										},
										{
											"begin": 6080,
											"end": 6103,
											"name": "ISZERO"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "JUMPI"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "MLOAD"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP2"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "MSTORE"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "ADD"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP1"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP1"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "ADD"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP3"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP2"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "SUB"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP3"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "MSTORE"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP2"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "MSTORE"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "ADD"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP1"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "SWAP2"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "CODECOPY"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "ADD"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "SWAP2"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "POP"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "POP"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "MLOAD"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "DUP1"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "SWAP2"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "SUB"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "SWAP1"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "REVERT"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 6072,
											"end": 6143,
											"name": "JUMPDEST"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 6194,
											"end": 6200,
											"name": "DUP2"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "MLOAD"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "DUP1"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "ADD"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "MSTORE"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "DUP1"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "DUP2"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "MSTORE"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "ADD"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "SWAP2"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "CODECOPY"
										},
										{
											"begin": 6172,
											"end": 6181,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6188,
											"name": "DUP8"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "AND"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "AND"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "DUP2"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "MSTORE"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "ADD"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "SWAP1"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "DUP2"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "MSTORE"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "ADD"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "KECCAK256"
										},
										{
											"begin": 6172,
											"end": 6189,
											"name": "SLOAD"
										},
										{
											"begin": 6172,
											"end": 6193,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 6172,
											"end": 6193,
											"name": "SWAP1"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "SWAP3"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "SWAP2"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "SWAP1"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "AND"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 6172,
											"end": 6243,
											"name": "JUMPDEST"
										},
										{
											"begin": 6152,
											"end": 6161,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP6"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "AND"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "MSTORE"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "ADD"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "KECCAK256"
										},
										{
											"begin": 6152,
											"end": 6243,
											"name": "DUP2"
										},
										{
											"begin": 6152,
											"end": 6243,
											"name": "SWAP1"
										},
										{
											"begin": 6152,
											"end": 6243,
											"name": "SSTORE"
										},
										{
											"begin": 6152,
											"end": 6243,
											"name": "POP"
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2"
										},
										{
											"begin": 6273,
											"end": 6282,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6292,
											"name": "DUP6"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "KECCAK256"
										},
										{
											"begin": 6273,
											"end": 6293,
											"name": "SLOAD"
										},
										{
											"begin": 6273,
											"end": 6297,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6273,
											"end": 6297,
											"name": "SWAP1"
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "SWAP2"
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "SWAP1"
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "AND"
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 6273,
											"end": 6305,
											"name": "JUMPDEST"
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP5"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "AND"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "AND"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "DUP2"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "MSTORE"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "ADD"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "SWAP1"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "DUP2"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "MSTORE"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "ADD"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6270,
											"name": "KECCAK256"
										},
										{
											"begin": 6250,
											"end": 6305,
											"name": "DUP2"
										},
										{
											"begin": 6250,
											"end": 6305,
											"name": "SWAP1"
										},
										{
											"begin": 6250,
											"end": 6305,
											"name": "SSTORE"
										},
										{
											"begin": 6250,
											"end": 6305,
											"name": "POP"
										},
										{
											"begin": 6354,
											"end": 6363,
											"name": "DUP2"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "AND"
										},
										{
											"begin": 6346,
											"end": 6352,
											"name": "DUP4"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "AND"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6365,
											"end": 6371,
											"name": "DUP4"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "MLOAD"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "DUP1"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "DUP3"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "DUP2"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "MSTORE"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "ADD"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "SWAP2"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "POP"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "POP"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "MLOAD"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "DUP1"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "SWAP2"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "SUB"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "SWAP1"
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "LOG3"
										},
										{
											"begin": 5909,
											"end": 6378,
											"name": "POP"
										},
										{
											"begin": 5909,
											"end": 6378,
											"name": "POP"
										},
										{
											"begin": 5909,
											"end": 6378,
											"name": "POP"
										},
										{
											"begin": 5909,
											"end": 6378,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1666,
											"end": 1848,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1666,
											"end": 1848,
											"name": "JUMPDEST"
										},
										{
											"begin": 1752,
											"end": 1759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "DUP4"
										},
										{
											"begin": 1776,
											"end": 1777,
											"name": "DUP4"
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "GT"
										},
										{
											"begin": 1776,
											"end": 1782,
											"name": "ISZERO"
										},
										{
											"begin": 1784,
											"end": 1796,
											"name": "DUP3"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "JUMPI"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MLOAD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MSTORE"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "ADD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "ADD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP3"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SUB"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP3"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MSTORE"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP4"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MLOAD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MSTORE"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "ADD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MLOAD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "ADD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP4"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "ADD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "AND"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "ISZERO"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "JUMPI"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP3"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SUB"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MLOAD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP4"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SUB"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "EXP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SUB"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "NOT"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "AND"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MSTORE"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "ADD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "JUMPDEST"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP3"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "MLOAD"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP2"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SUB"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "SWAP1"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "REVERT"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "JUMPDEST"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "POP"
										},
										{
											"begin": 1804,
											"end": 1813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1821,
											"name": "DUP4"
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "DUP6"
										},
										{
											"begin": 1816,
											"end": 1821,
											"name": "SUB"
										},
										{
											"begin": 1804,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1804,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "DUP1"
										},
										{
											"begin": 1834,
											"end": 1842,
											"name": "SWAP2"
										},
										{
											"begin": 1834,
											"end": 1842,
											"name": "POP"
										},
										{
											"begin": 1834,
											"end": 1842,
											"name": "POP"
										},
										{
											"begin": 1666,
											"end": 1848,
											"name": "SWAP4"
										},
										{
											"begin": 1666,
											"end": 1848,
											"name": "SWAP3"
										},
										{
											"begin": 1666,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1666,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1666,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1666,
											"end": 1848,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 839,
											"end": 1006,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 839,
											"end": 1006,
											"name": "JUMPDEST"
										},
										{
											"begin": 897,
											"end": 904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 913,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP3"
										},
										{
											"begin": 925,
											"end": 926,
											"name": "DUP5"
										},
										{
											"begin": 925,
											"end": 930,
											"name": "ADD"
										},
										{
											"begin": 913,
											"end": 930,
											"name": "SWAP1"
										},
										{
											"begin": 913,
											"end": 930,
											"name": "POP"
										},
										{
											"begin": 950,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 945,
											"end": 946,
											"name": "DUP2"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "LT"
										},
										{
											"begin": 945,
											"end": 951,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMPI"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MLOAD"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP3"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "SUB"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP3"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "SWAP2"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "MLOAD"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "SWAP2"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "SUB"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "REVERT"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 937,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "DUP1"
										},
										{
											"begin": 992,
											"end": 1000,
											"name": "SWAP2"
										},
										{
											"begin": 992,
											"end": 1000,
											"name": "POP"
										},
										{
											"begin": 992,
											"end": 1000,
											"name": "POP"
										},
										{
											"begin": 839,
											"end": 1006,
											"name": "SWAP3"
										},
										{
											"begin": 839,
											"end": 1006,
											"name": "SWAP2"
										},
										{
											"begin": 839,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 839,
											"end": 1006,
											"name": "POP"
										},
										{
											"begin": 839,
											"end": 1006,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6663,
											"end": 6953,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 6663,
											"end": 6953,
											"name": "JUMPDEST"
										},
										{
											"begin": 6754,
											"end": 6755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6756,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6735,
											"end": 6756,
											"name": "AND"
										},
										{
											"begin": 6735,
											"end": 6742,
											"name": "DUP3"
										},
										{
											"begin": 6735,
											"end": 6756,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6735,
											"end": 6756,
											"name": "AND"
										},
										{
											"begin": 6735,
											"end": 6756,
											"name": "EQ"
										},
										{
											"begin": 6735,
											"end": 6756,
											"name": "ISZERO"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "JUMPI"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "MLOAD"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP2"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "MSTORE"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "ADD"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP1"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP1"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "ADD"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP3"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP2"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "SUB"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP3"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "MSTORE"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP2"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "MSTORE"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "ADD"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP1"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP2"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "MSTORE"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "POP"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "ADD"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "SWAP2"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "POP"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "POP"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "MLOAD"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "DUP1"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "SWAP2"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "SUB"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "SWAP1"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "REVERT"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 6727,
											"end": 6792,
											"name": "JUMPDEST"
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP2"
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6816,
											"end": 6828,
											"name": "SLOAD"
										},
										{
											"begin": 6816,
											"end": 6832,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6816,
											"end": 6832,
											"name": "SWAP1"
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "SWAP2"
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "SWAP1"
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "AND"
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 6816,
											"end": 6840,
											"name": "JUMPDEST"
										},
										{
											"begin": 6801,
											"end": 6813,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6801,
											"end": 6840,
											"name": "DUP2"
										},
										{
											"begin": 6801,
											"end": 6840,
											"name": "SWAP1"
										},
										{
											"begin": 6801,
											"end": 6840,
											"name": "SSTORE"
										},
										{
											"begin": 6801,
											"end": 6840,
											"name": "POP"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP2"
										},
										{
											"begin": 6868,
											"end": 6877,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6885,
											"name": "DUP6"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "AND"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "AND"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "DUP2"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "MSTORE"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "SWAP1"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "DUP2"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "MSTORE"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "ADD"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "KECCAK256"
										},
										{
											"begin": 6868,
											"end": 6886,
											"name": "SLOAD"
										},
										{
											"begin": 6868,
											"end": 6890,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 6868,
											"end": 6890,
											"name": "SWAP1"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "SWAP2"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "SWAP1"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "AND"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 6868,
											"end": 6898,
											"name": "JUMPDEST"
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6857,
											"end": 6864,
											"name": "DUP5"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "AND"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "AND"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "DUP2"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "MSTORE"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "ADD"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "SWAP1"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "DUP2"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "MSTORE"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "ADD"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6865,
											"name": "KECCAK256"
										},
										{
											"begin": 6847,
											"end": 6898,
											"name": "DUP2"
										},
										{
											"begin": 6847,
											"end": 6898,
											"name": "SWAP1"
										},
										{
											"begin": 6847,
											"end": 6898,
											"name": "SSTORE"
										},
										{
											"begin": 6847,
											"end": 6898,
											"name": "POP"
										},
										{
											"begin": 6931,
											"end": 6938,
											"name": "DUP2"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "AND"
										},
										{
											"begin": 6927,
											"end": 6928,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "AND"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP4"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "MLOAD"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "DUP1"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "DUP3"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "DUP2"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "MSTORE"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "ADD"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "SWAP2"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "POP"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "POP"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "MLOAD"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "DUP1"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "SWAP2"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "SUB"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "SWAP1"
										},
										{
											"begin": 6910,
											"end": 6947,
											"name": "LOG3"
										},
										{
											"begin": 6663,
											"end": 6953,
											"name": "POP"
										},
										{
											"begin": 6663,
											"end": 6953,
											"name": "POP"
										},
										{
											"begin": 6663,
											"end": 6953,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2104,
											"end": 2319,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2104,
											"end": 2319,
											"name": "JUMPDEST"
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "AND"
										},
										{
											"begin": 2174,
											"end": 2182,
											"name": "DUP2"
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "AND"
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "EQ"
										},
										{
											"begin": 2174,
											"end": 2196,
											"name": "ISZERO"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "JUMPI"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MLOAD"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP2"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MSTORE"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "ADD"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP1"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP1"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "ADD"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP3"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP2"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SUB"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP3"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MSTORE"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP2"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MSTORE"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "ADD"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP1"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP2"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "CODECOPY"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "ADD"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP2"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "POP"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "POP"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MLOAD"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP1"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP2"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SUB"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "REVERT"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "JUMPDEST"
										},
										{
											"begin": 2280,
											"end": 2288,
											"name": "DUP1"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "AND"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "DUP1"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "SWAP1"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "SLOAD"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "SWAP1"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "EXP"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "SWAP1"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "DIV"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2272,
											"end": 2278,
											"name": "AND"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "AND"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "MLOAD"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "MLOAD"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "DUP1"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "SWAP2"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "SUB"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "SWAP1"
										},
										{
											"begin": 2251,
											"end": 2289,
											"name": "LOG3"
										},
										{
											"begin": 2305,
											"end": 2313,
											"name": "DUP1"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "EXP"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "DUP2"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "SLOAD"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "DUP2"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "MUL"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "NOT"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "AND"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "SWAP1"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "DUP4"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "AND"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "MUL"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "OR"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "SWAP1"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "SSTORE"
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "POP"
										},
										{
											"begin": 2104,
											"end": 2319,
											"name": "POP"
										},
										{
											"begin": 2104,
											"end": 2319,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}. //\\u6279\\u51c6spender\\u4eceowner\\u5730\\u5740\\u8f6c\\u79fb\\u4ee3\\u5e01\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.//\\u6279\\u51c6\\u67d0\\u5730\\u5740\\u67d0\\u6570\\u91cf    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.//\\u4f59\\u989d\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing //\\u6301\\u6709\\u8005\\u589e\\u53d1 the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.//\\u8f6c\\u79fb    * Requirements: \\r - `recipient` cannot be the zero address. \\u201c\\u6536\\u4ef6\\u4eba\\u201d\\u4e0d\\u80fd\\u662f\\u96f6\\u5730\\u5740\\u3002 - the caller must have a balance of at least `amount`.\\u53d1\\u9001\\u4eba\\u81f3\\u5c11\\u8981\\u6709\\u4ec0\\u4e48\\u591a\\u94b1\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BEP20Token.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BEP20Token.sol\":{\"keccak256\":\"0x35ed5f01ccb40f551cc550ac61285f299f63d0835132d40a81712acbe97c4042\",\"urls\":[\"bzz-raw://6c99b9597d1e624034b178cff1576c806ba513fea58451e5af05a971db9ec8fb\",\"dweb:/ipfs/QmXmGo3T9VsVhyPBZQRzWBpiqRQbexaagsWHaExVXHvnAJ\"]},\"Context.sol\":{\"keccak256\":\"0xe0a6b3f4da92bce7bb588195bf05a0c760913d3c15883a2e8e8337affa8bb750\",\"urls\":[\"bzz-raw://9455d29101e99550f3967d70d5b68ef0b21524a30fa2d8eae574094dcc094cce\",\"dweb:/ipfs/QmSkuYfRFKdmCWqAMe2BhRsBVPq77gKbho6r7iHx1JtD6S\"]},\"IBEP20.sol\":{\"keccak256\":\"0xc5d40bd5f9b6fdfeee745e6201d23027cd12b82ea9718bdb5eef92238d2dd679\",\"urls\":[\"bzz-raw://a693ddd70c57b6d3d4a51b6249952e0451756178913d9464f1de84554870bb17\",\"dweb:/ipfs/QmeLHfLHXBCjfkymqYDMSfHDdTCUG52NHEFmRfPSndcFPe\"]},\"Ownable.sol\":{\"keccak256\":\"0x2722db8d06cb3b49d95dc94b46d3622754e0fd14624b5be06660db9aa719efdd\",\"urls\":[\"bzz-raw://66024361d429185816f9c41299934b406d5c11d6790893385ecad9c85cea7045\",\"dweb:/ipfs/QmWPDpNZqESuhsNXctY6Gjm3TJTYkTCsPcY4fUyUWwcYLM\"]},\"SafeMath.sol\":{\"keccak256\":\"0xa0072d13d428205496f4b58af846a41880c5ee67ce52c583160aefd8d331c048\",\"urls\":[\"bzz-raw://505fe1dd37e0aefa87c24431162f77d318d991530b087a615c8cf397f3aa4436\",\"dweb:/ipfs/QmSgKamPjwdoCSZmdqS9b2MEaCVAfjqyer3upDmTmvMGV4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 623,
								"contract": "BEP20Token.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 18,
								"contract": "BEP20Token.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 24,
								"contract": "BEP20Token.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 26,
								"contract": "BEP20Token.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 28,
								"contract": "BEP20Token.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 30,
								"contract": "BEP20Token.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 32,
								"contract": "BEP20Token.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe0a6b3f4da92bce7bb588195bf05a0c760913d3c15883a2e8e8337affa8bb750\",\"urls\":[\"bzz-raw://9455d29101e99550f3967d70d5b68ef0b21524a30fa2d8eae574094dcc094cce\",\"dweb:/ipfs/QmSkuYfRFKdmCWqAMe2BhRsBVPq77gKbho6r7iHx1JtD6S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"IBEP20.sol": {
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IBEP20.sol\":{\"keccak256\":\"0xc5d40bd5f9b6fdfeee745e6201d23027cd12b82ea9718bdb5eef92238d2dd679\",\"urls\":[\"bzz-raw://a693ddd70c57b6d3d4a51b6249952e0451756178913d9464f1de84554870bb17\",\"dweb:/ipfs/QmeLHfLHXBCjfkymqYDMSfHDdTCUG52NHEFmRfPSndcFPe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0xe0a6b3f4da92bce7bb588195bf05a0c760913d3c15883a2e8e8337affa8bb750\",\"urls\":[\"bzz-raw://9455d29101e99550f3967d70d5b68ef0b21524a30fa2d8eae574094dcc094cce\",\"dweb:/ipfs/QmSkuYfRFKdmCWqAMe2BhRsBVPq77gKbho6r7iHx1JtD6S\"]},\"Ownable.sol\":{\"keccak256\":\"0x2722db8d06cb3b49d95dc94b46d3622754e0fd14624b5be06660db9aa719efdd\",\"urls\":[\"bzz-raw://66024361d429185816f9c41299934b406d5c11d6790893385ecad9c85cea7045\",\"dweb:/ipfs/QmWPDpNZqESuhsNXctY6Gjm3TJTYkTCsPcY4fUyUWwcYLM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 623,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"SafeMath.sol\":604:5036  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"SafeMath.sol\":604:5036  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820d2246cb18832af78fb97e927d9266fe994eb29c20ea675c1bc21a1e4299fb4e264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820d2246cb18832af78fb97e927d9266fe994eb29c20ea675c1bc21a1e4299fb4e264736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD2 0x24 PUSH13 0xB18832AF78FB97E927D9266FE9 SWAP5 0xEB 0x29 0xC2 0xE 0xA6 PUSH22 0xC1BC21A1E4299FB4E264736F6C634300051000320000 ",
							"sourceMap": "604:4432:4:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820d2246cb18832af78fb97e927d9266fe994eb29c20ea675c1bc21a1e4299fb4e264736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xD2 0x24 PUSH13 0xB18832AF78FB97E927D9266FE9 SWAP5 0xEB 0x29 0xC2 0xE 0xA6 PUSH22 0xC1BC21A1E4299FB4E264736F6C634300051000320000 ",
							"sourceMap": "604:4432:4:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 604,
									"end": 5036,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 5036,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820d2246cb18832af78fb97e927d9266fe994eb29c20ea675c1bc21a1e4299fb4e264736f6c63430005100032",
									".code": [
										{
											"begin": 604,
											"end": 5036,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 604,
											"end": 5036,
											"name": "ADDRESS"
										},
										{
											"begin": 604,
											"end": 5036,
											"name": "EQ"
										},
										{
											"begin": 604,
											"end": 5036,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 604,
											"end": 5036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 604,
											"end": 5036,
											"name": "MSTORE"
										},
										{
											"begin": 604,
											"end": 5036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 604,
											"end": 5036,
											"name": "DUP1"
										},
										{
											"begin": 604,
											"end": 5036,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SafeMath.sol\":{\"keccak256\":\"0xa0072d13d428205496f4b58af846a41880c5ee67ce52c583160aefd8d331c048\",\"urls\":[\"bzz-raw://505fe1dd37e0aefa87c24431162f77d318d991530b087a615c8cf397f3aa4436\",\"dweb:/ipfs/QmSgKamPjwdoCSZmdqS9b2MEaCVAfjqyer3upDmTmvMGV4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"BEP20Token.sol": {
				"ast": {
					"absolutePath": "BEP20Token.sol",
					"exportedSymbols": {
						"BEP20Token": [
							500
						]
					},
					"id": 501,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 528,
							"src": "27:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IBEP20.sol",
							"file": "./IBEP20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 617,
							"src": "52:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Ownable.sol",
							"file": "./Ownable.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 726,
							"src": "76:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 913,
							"src": "101:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 6,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 527,
										"src": "152:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$527",
											"typeString": "contract Context"
										}
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "152:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 8,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 616,
										"src": "161:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$616",
											"typeString": "contract IBEP20"
										}
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "161:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 10,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 725,
										"src": "169:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$725",
											"typeString": "contract Ownable"
										}
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "169:7:0"
								}
							],
							"contractDependencies": [
								527,
								616,
								725
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 500,
							"linearizedBaseContracts": [
								500,
								725,
								616,
								527
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 14,
									"libraryName": {
										"contractScope": null,
										"id": 12,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 912,
										"src": "188:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$912",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "182:27:0",
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "201:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 18,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "215:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "224:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "215:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 16,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "235:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "268:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "277:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "268:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 22,
											"keyType": {
												"id": 20,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "297:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "288:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 21,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "308:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 26,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "344:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "377:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 27,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "377:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 30,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "405:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 29,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "405:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 32,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 500,
									"src": "432:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 31,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "432:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "480:279:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "501:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "54616e6750696e67",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "509:10:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8bdbaaaade31e3d93e388d25c407432a05d15d7ec030374b42efd69759efee91",
															"typeString": "literal_string \"TangPing\""
														},
														"value": "TangPing"
													},
													"src": "501:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "501:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "5450494e47",
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "550:7:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_9c4cc5a9b3010d3b106c00a75ed1d735eb95f08eb35cd9c4e3b3a7148bb0fb7a",
															"typeString": "literal_string \"TPING\""
														},
														"value": "TPING"
													},
													"src": "540:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "540:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 43,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "578:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "36",
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "590:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6_by_1",
															"typeString": "int_const 6"
														},
														"value": "6"
													},
													"src": "578:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "578:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "618:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130303030303030303030303030303030",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "633:17:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"value": "10000000000000000"
													},
													"src": "618:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "618:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 51,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "657:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 54,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 52,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "667:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "667:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "657:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "681:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "657:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "657:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "724:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "716:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "716:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 62,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "728:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 64,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "740:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 58,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "707:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "707:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "EmitStatement",
												"src": "702:51:0"
											}
										]
									},
									"documentation": null,
									"id": 68,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:0:0"
									},
									"scope": 500,
									"src": "459:300:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "871:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 73,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "885:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 72,
												"id": 75,
												"nodeType": "Return",
												"src": "878:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "836:2:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "862:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "861:9:0"
									},
									"scope": 500,
									"src": "819:79:0",
									"stateMutability": "view",
									"superFunction": 554,
									"visibility": "external"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "1007:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 82,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1021:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 81,
												"id": 83,
												"nodeType": "Return",
												"src": "1014:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "1000:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 79,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1000:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "999:7:0"
									},
									"scope": 500,
									"src": "957:79:0",
									"stateMutability": "view",
									"superFunction": 539,
									"visibility": "external"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1149:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1163:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 89,
												"id": 91,
												"nodeType": "Return",
												"src": "1156:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1134:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 87,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1134:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1133:15:0"
									},
									"scope": 500,
									"src": "1093:83:0",
									"stateMutability": "view",
									"superFunction": 544,
									"visibility": "external"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "1283:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 98,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 32,
													"src": "1297:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 97,
												"id": 99,
												"nodeType": "Return",
												"src": "1290:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1242:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1268:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 95,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1268:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1267:15:0"
									},
									"scope": 500,
									"src": "1229:79:0",
									"stateMutability": "view",
									"superFunction": 549,
									"visibility": "external"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1419:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "1433:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 105,
												"id": 107,
												"nodeType": "Return",
												"src": "1426:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1384:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1410:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1409:9:0"
									},
									"scope": 500,
									"src": "1364:87:0",
									"stateMutability": "view",
									"superFunction": 534,
									"visibility": "external"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1581:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 116,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1595:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 118,
													"indexExpression": {
														"argumentTypes": null,
														"id": 117,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1595:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 115,
												"id": 119,
												"nodeType": "Return",
												"src": "1588:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.//余额",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1532:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1531:17:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1571:9:0"
									},
									"scope": 500,
									"src": "1513:106:0",
									"stateMutability": "view",
									"superFunction": 561,
									"visibility": "external"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1969:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 131,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "1986:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1986:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 133,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "2000:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 134,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2011:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "1976:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1976:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1976:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2032:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 129,
												"id": 138,
												"nodeType": "Return",
												"src": "2025:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.//转移\n\n   * Requirements:\n\r\n- `recipient` cannot be the zero address. “收件人”不能是零地址。\n- the caller must have a balance of at least `amount`.发送人至少要有什么多钱",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1910:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1910:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1929:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1909:35:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1963:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1962:6:0"
									},
									"scope": 500,
									"src": "1892:150:0",
									"stateMutability": "nonpayable",
									"superFunction": 570,
									"visibility": "external"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2657:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 149,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "2671:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 151,
														"indexExpression": {
															"argumentTypes": null,
															"id": 150,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "2683:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2671:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 153,
													"indexExpression": {
														"argumentTypes": null,
														"id": 152,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "2690:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2671:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 148,
												"id": 154,
												"nodeType": "Return",
												"src": "2664:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}. //批准spender从owner地址转移代币",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2593:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2608:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2592:32:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2648:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2647:9:0"
									},
									"scope": 500,
									"src": "2574:130:0",
									"stateMutability": "view",
									"superFunction": 579,
									"visibility": "external"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2934:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 166,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "2976:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2976:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 168,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2990:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2999:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 165,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "2967:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2967:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2967:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3020:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 164,
												"id": 173,
												"nodeType": "Return",
												"src": "3013:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.//批准某地址某数量\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2877:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2894:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2876:33:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2928:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2928:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2927:6:0"
									},
									"scope": 500,
									"src": "2860:170:0",
									"stateMutability": "nonpayable",
									"superFunction": 588,
									"visibility": "external"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3572:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 187,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3589:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 188,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3597:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 189,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "3608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 186,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "3579:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3579:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "3579:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 193,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3631:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 194,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3639:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3639:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 203,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "3691:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3699:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 196,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "3653:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 198,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 197,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 177,
																			"src": "3665:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3653:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 201,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 199,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "3673:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3673:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3653:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "3653:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3653:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "3622:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3622:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "3622:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3757:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 185,
												"id": 209,
												"nodeType": "Return",
												"src": "3750:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3497:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3513:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3532:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3496:51:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3566:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3566:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3565:6:0"
									},
									"scope": 500,
									"src": "3475:292:0",
									"stateMutability": "nonpayable",
									"superFunction": 599,
									"visibility": "external"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "4235:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 221,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "4251:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4251:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 223,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "4265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 231,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "4313:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 224,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "4274:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 227,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 225,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "4286:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4286:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4274:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 229,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 228,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "4300:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4274:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 752,
																"src": "4274:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4274:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 220,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "4242:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4242:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "4242:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4339:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 219,
												"id": 236,
												"nodeType": "Return",
												"src": "4332:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "4176:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "4193:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4175:37:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "4229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4228:6:0"
									},
									"scope": 500,
									"src": "4149:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "4912:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 248,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "4928:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4928:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 250,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4942:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 258,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "4990:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5007:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 251,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "4951:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 254,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 252,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "4963:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4963:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4951:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 256,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 255,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "4977:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4951:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "4951:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4951:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 247,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "4919:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "4919:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5062:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 264,
												"nodeType": "Return",
												"src": "5055:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "4848:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "4865:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4847:42:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "4906:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4906:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4905:6:0"
									},
									"scope": 500,
									"src": "4821:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "5352:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 276,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "5365:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5365:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 278,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "5379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 275,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "5359:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5359:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "5359:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5400:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 274,
												"id": 282,
												"nodeType": "Return",
												"src": "5393:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing //持有者增发\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 271,
											"modifierName": {
												"argumentTypes": null,
												"id": 270,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 669,
												"src": "5327:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5327:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "5304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5303:16:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "5346:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5346:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5345:6:0"
									},
									"scope": 500,
									"src": "5290:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5988:390:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 294,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "6003:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6021:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6013:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6013:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6003:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6025:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "5995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5995:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "5995:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 303,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6080:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6101:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6093:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6093:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6080:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6105:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "6072:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6072:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "6072:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 311,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "6152:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 313,
														"indexExpression": {
															"argumentTypes": null,
															"id": 312,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "6162:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6152:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 318,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6194:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6202:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 314,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "6172:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 316,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 315,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "6182:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6172:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 795,
															"src": "6172:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6172:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6152:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "6152:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 323,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "6250:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 325,
														"indexExpression": {
															"argumentTypes": null,
															"id": 324,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6260:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6250:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 330,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6298:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "6273:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 327,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "6283:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6273:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 752,
															"src": "6273:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6273:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6250:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "6250:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 335,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "6346:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 336,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6354:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 337,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "6365:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 334,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "6337:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "EmitStatement",
												"src": "6332:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address. //发送人\n- `recipient` cannot be the zero address. //接收者\n- `sender` must have a balance of at least `amount`. //转移金额",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5928:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5944:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5963:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5927:51:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:0"
									},
									"scope": 500,
									"src": "5909:469:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "6720:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 349,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "6735:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6754:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6746:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6746:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6735:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6758:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "6727:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6727:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "6727:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 357,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "6801:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 360,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "6833:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 358,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "6816:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 752,
															"src": "6816:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6816:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6801:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "6801:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 364,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "6847:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 366,
														"indexExpression": {
															"argumentTypes": null,
															"id": 365,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6847:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 371,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "6891:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 367,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "6868:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 369,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 368,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "6878:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6868:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 752,
															"src": "6868:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6868:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6847:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "6847:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6927:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6919:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 379,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "6931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 380,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "6940:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 375,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "6910:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6910:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "EmitStatement",
												"src": "6905:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.//给account地址增发\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address.",
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "6678:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "6695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6677:33:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6720:0:0"
									},
									"scope": 500,
									"src": "6663:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "7348:273:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 392,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "7363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7382:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7374:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7374:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7363:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7386:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "7355:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7355:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "7355:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 400,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "7431:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 402,
														"indexExpression": {
															"argumentTypes": null,
															"id": 401,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7441:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7431:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 407,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "7475:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7483:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 403,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "7452:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 405,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 404,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "7462:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7452:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 795,
															"src": "7452:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7452:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7431:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7431:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 412,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "7527:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 415,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "7559:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 413,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "7542:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 768,
															"src": "7542:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7542:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7527:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "7527:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 420,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7604:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7596:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7596:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 424,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 419,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7578:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7578:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "EmitStatement",
												"src": "7573:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.//销毁account地址的代币\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "7306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "7323:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7305:33:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7348:0:0"
									},
									"scope": 500,
									"src": "7291:330:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "8116:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 438,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "8131:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8148:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8140:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8140:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8131:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8152:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "8123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8123:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "8123:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 447,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "8206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8225:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8217:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8217:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8206:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8229:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "8198:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8198:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "8198:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 455,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "8275:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 458,
															"indexExpression": {
																"argumentTypes": null,
																"id": 456,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "8287:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8275:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 459,
														"indexExpression": {
															"argumentTypes": null,
															"id": 457,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "8294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8275:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 460,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "8305:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8275:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "8275:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 464,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "8332:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 465,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "8339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 466,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "8348:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 463,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "8323:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8323:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "EmitStatement",
												"src": "8318:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.//批准\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "8059:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8059:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "8074:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "8091:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8058:48:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8116:0:0"
									},
									"scope": 500,
									"src": "8041:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "8653:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 478,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "8675:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "8660:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8660:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "8660:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 483,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "8698:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 484,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "8707:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8707:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 493,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "8760:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8768:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 486,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "8721:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 488,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 487,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "8733:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8721:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 491,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 489,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 515,
																			"src": "8742:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8742:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8721:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "8721:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8721:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "8689:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8689:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 497,
												"nodeType": "ExpressionStatement",
												"src": "8689:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted 开发者从发来的地址中销毁指定数量的代币\nfrom the caller's allowance.\n\r\nSee {_burn} and {_approve}.",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "8628:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8610:33:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8653:0:0"
									},
									"scope": 500,
									"src": "8592:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 501,
							"src": "129:8688:0"
						}
					],
					"src": "0:8817:0"
				},
				"id": 0
			},
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							527
						]
					},
					"id": 528,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 502,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 527,
							"linearizedBaseContracts": [
								527
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "735:3:1",
										"statements": []
									},
									"documentation": null,
									"id": 506,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "723:2:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:0:1"
									},
									"scope": 527,
									"src": "711:27:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "806:30:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 511,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "820:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "820:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 510,
												"id": 513,
												"nodeType": "Return",
												"src": "813:17:1"
											}
										]
									},
									"documentation": null,
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:2:1"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "789:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "789:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "788:17:1"
									},
									"scope": 527,
									"src": "744:92:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "899:158:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 520,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 941,
													"src": "906:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$527",
														"typeString": "contract Context"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "906:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 522,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "1043:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1043:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 519,
												"id": 524,
												"nodeType": "Return",
												"src": "1036:15:1"
											}
										]
									},
									"documentation": null,
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:1"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "885:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "885:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "884:14:1"
									},
									"scope": 527,
									"src": "842:215:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 528,
							"src": "537:523:1"
						}
					],
					"src": "0:1060:1"
				},
				"id": 1
			},
			"IBEP20.sol": {
				"ast": {
					"absolutePath": "IBEP20.sol",
					"exportedSymbols": {
						"IBEP20": [
							616
						]
					},
					"id": 617,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 529,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "137:2:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "163:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "163:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "162:9:2"
									},
									"scope": 616,
									"src": "117:55:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "274:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 536,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "274:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "273:7:2"
									},
									"scope": 616,
									"src": "231:50:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "379:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 541,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "379:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "378:15:2"
									},
									"scope": 616,
									"src": "338:56:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:2:2"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "486:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 546,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "486:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "485:15:2"
									},
									"scope": 616,
									"src": "447:54:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:2:2"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "604:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "603:9:2"
									},
									"scope": 616,
									"src": "561:52:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "712:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "711:17:2"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "752:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "751:9:2"
									},
									"scope": 616,
									"src": "693:68:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "992:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "992:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1011:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "991:35:2"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1045:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1045:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1044:6:2"
									},
									"scope": 616,
									"src": "974:77:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1338:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1354:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1337:33:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1394:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1393:9:2"
									},
									"scope": 616,
									"src": "1319:84:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2059:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2076:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2058:33:2"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2110:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2110:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2109:6:2"
									},
									"scope": 616,
									"src": "2042:74:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2436:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2452:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2471:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2435:51:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "2505:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2505:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2504:6:2"
									},
									"scope": 616,
									"src": "2414:97:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.",
									"id": 607,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2689:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2711:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "2731:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2688:57:2"
									},
									"src": "2674:72:2"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 615,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2916:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2939:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "2964:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2915:63:2"
									},
									"src": "2901:78:2"
								}
							],
							"scope": 617,
							"src": "27:2955:2"
						}
					],
					"src": "0:2982:2"
				},
				"id": 2
			},
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							725
						]
					},
					"id": 726,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 619,
							"nodeType": "ImportDirective",
							"scope": 726,
							"sourceUnit": 528,
							"src": "27:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 620,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 527,
										"src": "579:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$527",
											"typeString": "contract Context"
										}
									},
									"id": 621,
									"nodeType": "InheritanceSpecifier",
									"src": "579:7:3"
								}
							],
							"contractDependencies": [
								527
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 725,
							"linearizedBaseContracts": [
								725,
								527
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 623,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 725,
									"src": "592:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 622,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "592:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 629,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "648:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "679:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "647:57:3"
									},
									"src": "621:84:3"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "828:125:3",
										"statements": [
											{
												"assignments": [
													633
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "835:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 632,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "835:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 636,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 634,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "855:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "855:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "835:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 637,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "874:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 638,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "883:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "874:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "874:18:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "933:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "925:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "925:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 645,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "937:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 641,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "904:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "EmitStatement",
												"src": "899:48:3"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 649,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:2:3"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "828:0:3"
									},
									"scope": 725,
									"src": "804:149:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "1073:26:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 654,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 623,
													"src": "1087:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 653,
												"id": 655,
												"nodeType": "Return",
												"src": "1080:13:3"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1064:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1063:9:3"
									},
									"scope": 725,
									"src": "1026:73:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "1205:88:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 660,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "1220:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 661,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "1230:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1230:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1220:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1244:34:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "1212:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1212:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "1212:67:3"
											},
											{
												"id": 667,
												"nodeType": "PlaceholderStatement",
												"src": "1286:1:3"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 669,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:2:3"
									},
									"src": "1184:109:3",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "1674:84:3",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 675,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "1707:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1723:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1715:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1715:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 674,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "1686:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1686:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "EmitStatement",
												"src": "1681:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 681,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "1733:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1750:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1742:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1742:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1733:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "1733:19:3"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 672,
											"modifierName": {
												"argumentTypes": null,
												"id": 671,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 669,
												"src": "1664:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1664:9:3"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1654:2:3"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1674:0:3"
									},
									"scope": 725,
									"src": "1628:130:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "1965:41:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 696,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "1991:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 695,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "1972:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1972:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "1972:28:3"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 693,
											"modifierName": {
												"argumentTypes": null,
												"id": 692,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 669,
												"src": "1955:9:3",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1955:9:3"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "1930:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1929:18:3"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1965:0:3"
									},
									"scope": 725,
									"src": "1903:103:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2159:160:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 706,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "2174:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2194:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2186:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2186:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2174:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2198:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "2166:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2166:73:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "2166:73:3"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 715,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "2272:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 716,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "2280:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 714,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "2251:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "EmitStatement",
												"src": "2246:43:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 719,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "2296:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 720,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2305:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2296:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "2296:17:3"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2132:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2131:18:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2159:0:3"
									},
									"scope": 725,
									"src": "2104:215:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 726,
							"src": "559:1763:3"
						}
					],
					"src": "0:2322:3"
				},
				"id": 3
			},
			"SafeMath.sol": {
				"ast": {
					"absolutePath": "SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							912
						]
					},
					"id": 913,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 727,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 912,
							"linearizedBaseContracts": [
								912
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "906:100:4",
										"statements": [
											{
												"assignments": [
													737
												],
												"declarations": [
													{
														"constant": false,
														"id": 737,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "913:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "913:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 738,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "925:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 739,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "929:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "925:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "913:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 743,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "945:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 744,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "950:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "945:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "953:29:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "937:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "937:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "937:46:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 749,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 737,
													"src": "999:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 735,
												"id": 750,
												"nodeType": "Return",
												"src": "992:8:4"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "852:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "851:22:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "897:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "896:9:4"
									},
									"scope": 912,
									"src": "839:167:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "1328:63:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 762,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "1346:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 763,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "1349:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1352:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 761,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															768,
															795
														],
														"referencedDeclaration": 795,
														"src": "1342:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1342:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 760,
												"id": 766,
												"nodeType": "Return",
												"src": "1335:50:4"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1274:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1285:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1273:22:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "1319:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1318:9:4"
									},
									"scope": 912,
									"src": "1261:130:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "1761:87:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "1776:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 781,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1781:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1776:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 783,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "1784:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "1768:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1768:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "1768:29:4"
											},
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 794,
														"src": "1804:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1804:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 788,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1816:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 789,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "1820:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1816:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1804:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 792,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 787,
													"src": "1841:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 778,
												"id": 793,
												"nodeType": "Return",
												"src": "1834:8:4"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1679:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1690:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1701:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1701:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1678:50:4"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1752:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1751:9:4"
									},
									"scope": 912,
									"src": "1666:182:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "2146:364:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 804,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "2366:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2371:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2366:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 810,
												"nodeType": "IfStatement",
												"src": "2362:37:4",
												"trueBody": {
													"id": 809,
													"nodeType": "Block",
													"src": "2374:25:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2390:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 803,
															"id": 808,
															"nodeType": "Return",
															"src": "2383:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 812,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "2407:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 811,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 813,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "2419:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 814,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "2423:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2419:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2407:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 818,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "2439:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 819,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "2443:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2439:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 821,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "2448:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2439:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2451:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "2431:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2431:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "2431:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 826,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 812,
													"src": "2503:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 803,
												"id": 827,
												"nodeType": "Return",
												"src": "2496:8:4"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2092:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2103:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2091:22:4"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2137:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2136:9:4"
									},
									"scope": 912,
									"src": "2079:431:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "3021:59:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 839,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3039:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 840,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3042:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3045:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 838,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															845,
															872
														],
														"referencedDeclaration": 872,
														"src": "3035:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3035:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 837,
												"id": 843,
												"nodeType": "Return",
												"src": "3028:46:4"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2967:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2978:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2966:22:4"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "3012:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3011:9:4"
									},
									"scope": 912,
									"src": "2954:126:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "3639:228:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 857,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "3717:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3721:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3717:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 860,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "3724:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "3709:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3709:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "3709:28:4"
											},
											{
												"assignments": [
													864
												],
												"declarations": [
													{
														"constant": false,
														"id": 864,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "3744:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3744:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 865,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "3756:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 866,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "3760:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3744:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 869,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 864,
													"src": "3860:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 855,
												"id": 870,
												"nodeType": "Return",
												"src": "3853:8:4"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3557:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3568:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3579:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3579:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3556:50:4"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "3630:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3629:9:4"
									},
									"scope": 912,
									"src": "3544:323:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "4367:57:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 882,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "4385:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 883,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "4388:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4391:26:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 881,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															888,
															911
														],
														"referencedDeclaration": 911,
														"src": "4381:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4381:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 886,
												"nodeType": "Return",
												"src": "4374:44:4"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "4313:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "4324:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4312:22:4"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "4358:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4357:9:4"
									},
									"scope": 912,
									"src": "4300:124:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "4972:61:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 900,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "4987:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4992:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4987:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 903,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "4995:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															930,
															931
														],
														"referencedDeclaration": 931,
														"src": "4979:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4979:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "4979:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 906,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "5022:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 907,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "5026:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5022:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 898,
												"id": 909,
												"nodeType": "Return",
												"src": "5015:12:4"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "4890:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4890:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "4901:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "4912:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4912:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4889:50:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "4963:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4963:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4962:9:4"
									},
									"scope": 912,
									"src": "4877:156:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 913,
							"src": "604:4432:4"
						}
					],
					"src": "0:5036:4"
				},
				"id": 4
			}
		}
	}
}